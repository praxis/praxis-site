{
  "info": {
    "schema_version": "1.0",
    "base_path": "/api",
    "version_with": [
      "header",
      "params"
    ],
    "consumes": [
      "json",
      "x-www-form-urlencoded"
    ],
    "produces": [
      "json"
    ]
  },
  "resources": {
    "V1-Endpoints-Annotations": {
      "description": "Annotations are a way to associate custom and unstructured information to existing API resources. By using\nannotations it is possible to store and retrieve client-side data that it is related to existing resources.\nFor example, Product Plan uses annotations starting with `pp_`-prefixed keys to store information related to UI rendering\npreferences and state.\n",
      "media_type": {
        "name": "V1::MediaTypes::Annotation",
        "family": "hash",
        "id": "V1-MediaTypes-Annotation",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Returns the specified association.",
          "name": "show",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccd0a4930@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The annotation's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 959,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the annotation. If the view param is not specified or does not exist, the annotation will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "default",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "id,key,value",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "id,key,value",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Annotation",
                "family": "hash",
                "id": "V1-MediaTypes-Annotation",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.annotation+json",
                    "body": "{\n  \"href\": \"/api/annotations/870\",\n  \"id\": 959,\n  \"target_href\": \"/api/roadmaps/444\",\n  \"key\": \"pp_timeline_renderer\",\n  \"value\": \"{\\\"some\\\": \\\"JSON\\\", \\\"value\\\": \\\"perhaps\\\"}\"\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/annotations/:id",
              "version": "1",
              "example": "/api/annotations/959"
            }
          ]
        },
        {
          "description": "Creates an annotation for a target resource",
          "name": "create",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcce259518@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
            }
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "target_href": {
                  "description": "API href of the resource the association is attached to",
                  "example_definition": "#<Proc:0x007ffcd934b628@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/annotation.rb:22 (lambda)>",
                  "type": {
                    "name": "URI",
                    "family": "string",
                    "id": "Attributor-URI"
                  },
                  "example": "/api/roadmaps/444"
                },
                "key": {
                  "description": "The key that identifies the annotation data",
                  "values": [
                    "pp_timeline_renderer"
                  ],
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "pp_timeline_renderer"
                },
                "value": {
                  "description": "The associated value of the annotation",
                  "example_definition": "{\"some\": \"JSON\", \"value\": \"perhaps\"}",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "{\"some\": \"JSON\", \"value\": \"perhaps\"}"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "target_href",
                    "key",
                    "value"
                  ]
                }
              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"target_href\": \"/api/roadmaps/444\",\n  \"key\": \"pp_timeline_renderer\",\n  \"value\": \"{\\\"some\\\": \\\"JSON\\\", \\\"value\\\": \\\"perhaps\\\"}\"\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "target_href=%2Fapi%2Froadmaps%2F444&key=pp_timeline_renderer&value=%7B%22some%22%3A+%22JSON%22%2C+%22value%22%3A+%22perhaps%22%7D"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "created": {
              "description": "The request has been fulfilled and resulted in a new resource being created.",
              "status": 201,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "POST",
              "path": "/api/annotations",
              "version": "1",
              "example": "/api/annotations"
            }
          ]
        },
        {
          "description": "Updates the value of an existing annotation.",
          "name": "update",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccfbc2108@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The annotation's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 959,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "value": {
                  "description": "The associated value of the annotation",
                  "example_definition": "{\"some\": \"JSON\", \"value\": \"perhaps\"}",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "{\"some\": \"JSON\", \"value\": \"perhaps\"}"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "value"
                  ]
                }
              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"value\": \"{\\\"some\\\": \\\"JSON\\\", \\\"value\\\": \\\"perhaps\\\"}\"\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "value=%7B%22some%22%3A+%22JSON%22%2C+%22value%22%3A+%22perhaps%22%7D"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "PATCH",
              "path": "/api/annotations/:id",
              "version": "1",
              "example": "/api/annotations/959"
            }
          ]
        },
        {
          "description": "Deletes a single annotation.",
          "name": "delete",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccda94940@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 79ee9669cf7a262ab95da8dce22f6a67979c9c02df0f9bd498dd3b4b466d5ab5"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Annotation"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The annotation's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 959,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "DELETE",
              "path": "/api/annotations/:id",
              "version": "1",
              "example": "/api/annotations/959"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::Annotations",
      "display_name": "Annotations",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-Bars": {
      "description": "Bars and containers are the visual representation of items on a roadmap.\nThese could be initiatives, stories, epics or whatever you want to represent on a roadmap.\nA container is a bar with other bars contained in it. Presently only a single level is supported.\n",
      "media_type": {
        "name": "V1::MediaTypes::Bar",
        "family": "hash",
        "id": "V1-MediaTypes-Bar",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Returns a list of all bars owned by the authenticated user.",
          "name": "index",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccdb61940@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "view": {
                  "description": "View name with which to render the bars. If the view param is not specified or does not exist, the bars will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "id,name,start_date,end_date,links{roadmap}",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "id,name,start_date,end_date,links{roadmap}",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "roadmap.id": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      },
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      },
                      "start_date": {
                        "operators": [
                          "!=",
                          "<",
                          "<=",
                          "=",
                          ">=",
                          ">"
                        ]
                      },
                      "child_bars.id": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      }
                    }
                  },
                  "example": "name=Design&start_date<=2014-04-22",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=notes,from=Surveys%2C+interviews%2C+including+interactive+usability+meetings.,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "id,-name",
                  "source": "query"
                }
              },
              "requirements": [

              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Bar::Collection",
                "family": "array",
                "id": "V1-MediaTypes-Bar-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::Bar"
                  },
                  "type": {
                    "name": "V1::MediaTypes::Bar",
                    "family": "hash",
                    "id": "V1-MediaTypes-Bar",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.bar+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/bars/560\",\n    \"id\": 560,\n    \"name\": \"Gather Feedback\",\n    \"start_date\": \"2014-06-04T00:00:00+00:00\",\n    \"end_date\": \"2013-05-17T00:00:00+00:00\",\n    \"description\": \"Reach out to customers and gather their feedback on specific questions and open dialog.\",\n    \"strategic_value\": \"Makes our customers happy, leading to increased retention.\",\n    \"notes\": \"Surveys, interviews, including interactive usability meetings.\",\n    \"percent_done\": 16,\n    \"effort\": 1,\n    \"tags\": [\n      \"Surveys\",\n      \"Interviews\",\n      \"Customer Success\"\n    ],\n    \"fields\": {\n      \"pp_legend\": \"Goal 1\",\n      \"pp_lanes\": \"Lane 2\"\n    },\n    \"timestamps\": {\n      \"created_at\": \"2014-01-02T00:00:00+00:00\",\n      \"updated_at\": \"2014-12-28T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/585\"\n      },\n      \"parent_bar\": {\n        \"href\": \"/api/bars/616\"\n      },\n      \"child_bars\": {\n        \"href\": \"/api/bars/529/child_bars\"\n      },\n      \"external_links\": {\n        \"href\": \"/api/bars/529/external_links\"\n      }\n    }\n  },\n  {\n    \"href\": \"/api/bars/744\",\n    \"id\": 744,\n    \"name\": \"Design\",\n    \"start_date\": \"2014-04-15T00:00:00+00:00\",\n    \"end_date\": \"2013-03-25T00:00:00+00:00\",\n    \"description\": \"Implement and review the design and produce documentation.\",\n    \"strategic_value\": \"Upfront design and documentation leads to a better product.\",\n    \"notes\": \"Rapid prototyping can also help for the UI components.\",\n    \"percent_done\": 25,\n    \"effort\": 3,\n    \"tags\": [\n      \"Design Reviews\",\n      \"Documentation\",\n      \"Prototype\"\n    ],\n    \"fields\": {\n      \"pp_legend\": \"Goal 1\",\n      \"pp_lanes\": \"Lane 2\"\n    },\n    \"timestamps\": {\n      \"created_at\": \"2014-05-16T00:00:00+00:00\",\n      \"updated_at\": \"2012-11-06T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/887\"\n      },\n      \"parent_bar\": {\n        \"href\": \"/api/bars/220\"\n      },\n      \"child_bars\": {\n        \"href\": \"/api/bars/529/child_bars\"\n      },\n      \"external_links\": {\n        \"href\": \"/api/bars/529/external_links\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/bars",
              "version": "1",
              "example": "/api/bars"
            }
          ]
        },
        {
          "description": "Returns the specified bar.",
          "name": "show",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccfdf0010@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The bar's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 739,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the bar. If the view param is not specified or does not exist, the bar will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "name,start_date,end_date,percent_done,links{roadmap}",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "name,start_date,end_date,percent_done,links{roadmap}",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Bar",
                "family": "hash",
                "id": "V1-MediaTypes-Bar",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.bar+json",
                    "body": "{\n  \"href\": \"/api/bars/739\",\n  \"id\": 739,\n  \"name\": \"Design\",\n  \"start_date\": \"2013-02-22T00:00:00+00:00\",\n  \"end_date\": \"2014-02-17T00:00:00+00:00\",\n  \"description\": \"Implement and review the design and produce documentation.\",\n  \"strategic_value\": \"Upfront design and documentation leads to a better product.\",\n  \"notes\": \"Rapid prototyping can also help for the UI components.\",\n  \"percent_done\": 82,\n  \"effort\": 5,\n  \"tags\": [\n    \"Design Reviews\",\n    \"Documentation\",\n    \"Prototype\"\n  ],\n  \"fields\": {\n    \"pp_legend\": \"Goal 1\",\n    \"pp_lanes\": \"Lane 2\"\n  },\n  \"timestamps\": {\n    \"created_at\": \"2013-07-25T00:00:00+00:00\",\n    \"updated_at\": \"2014-05-24T00:00:00+00:00\"\n  },\n  \"links\": {\n    \"roadmap\": {\n      \"href\": \"/api/roadmaps/195\"\n    },\n    \"parent_bar\": {\n      \"href\": \"/api/bars/380\"\n    },\n    \"child_bars\": {\n      \"href\": \"/api/bars/529/child_bars\"\n    },\n    \"external_links\": {\n      \"href\": \"/api/bars/529/external_links\"\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/bars/:id",
              "version": "1",
              "example": "/api/bars/739"
            }
          ]
        },
        {
          "description": "Updates the specified bar.",
          "name": "update",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccfeea6f0@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The bar's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 739,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "name": {
                  "description": "Title of the bar.",
                  "example_definition": "#<Proc:0x007ffcd587a5d0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:29 (lambda)>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Design"
                },
                "description": {
                  "description": "In-depth explanation of what the bar represents.",
                  "example_definition": "#<Proc:0x007ffcd58795b8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:42>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Implement and review the design and produce documentation."
                },
                "strategic_value": {
                  "description": "Describe why this is important.",
                  "example_definition": "#<Proc:0x007ffcd58790e0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:53>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Upfront design and documentation leads to a better product."
                },
                "percent_done": {
                  "description": "Determines the shading of the bar to indicate progress. Null is fully saturated. 0-100 displays a gradual shading until fully saturated.",
                  "options": {
                    "min": 0,
                    "max": 100
                  },
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 82
                },
                "effort": {
                  "description": "Displays on the bar to indicate the amount of effort needed to complete.",
                  "options": {
                    "min": 0,
                    "max": 10
                  },
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 5
                },
                "notes": {
                  "description": "Additional information to be shared.",
                  "example_definition": "#<Proc:0x007ffcd5878be0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:64>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Rapid prototyping can also help for the UI components."
                },
                "tags": {
                  "description": "Keywords and terms associated with the bar.",
                  "example_definition": "#<Proc:0x007ffcd932f950@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:87>",
                  "type": {
                    "name": "Collection",
                    "family": "array",
                    "id": null,
                    "options": {
                    },
                    "member_attribute": {
                      "type": {
                        "name": "String",
                        "family": "string",
                        "id": "Attributor-String"
                      },
                      "example": "Design Reviews"
                    }
                  },
                  "example": [
                    "Design Reviews",
                    "Documentation",
                    "Prototype"
                  ]
                }
              },
              "requirements": [

              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"name\": \"Design\",\n  \"description\": \"Implement and review the design and produce documentation.\",\n  \"strategic_value\": \"Upfront design and documentation leads to a better product.\",\n  \"percent_done\": 82,\n  \"effort\": 5,\n  \"notes\": \"Rapid prototyping can also help for the UI components.\",\n  \"tags\": [\n    \"Design Reviews\",\n    \"Documentation\",\n    \"Prototype\"\n  ]\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "name=Design&description=Implement+and+review+the+design+and+produce+documentation.&strategic_value=Upfront+design+and+documentation+leads+to+a+better+product.&percent_done=82&effort=5&notes=Rapid+prototyping+can+also+help+for+the+UI+components.&tags=Design+Reviews&tags=Documentation&tags=Prototype"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "PATCH",
              "path": "/api/bars/:id",
              "version": "1",
              "example": "/api/bars/739"
            }
          ]
        },
        {
          "description": "Returns all external links for the specified bar.",
          "name": "external_links",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcce510450@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The bar's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 739,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the external links. If the view param is not specified or does not exist, the external links will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "type,uri",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "type,uri",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "type": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      },
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "type=tracker&name!=Super Cool Feature",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=id,from=712,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "-id,name",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::ExternalLink::Collection",
                "family": "array",
                "id": "V1-MediaTypes-ExternalLink-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::ExternalLink"
                  },
                  "type": {
                    "name": "V1::MediaTypes::ExternalLink",
                    "family": "hash",
                    "id": "V1-MediaTypes-ExternalLink",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.external_link+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/external_links/560\",\n    \"id\": 560,\n    \"type\": \"tracker\",\n    \"name\": \"Super Cool Feature\",\n    \"uri\": \"https://www.pivotaltracker.com/story/show/141128831\",\n    \"links\": {\n      \"bar\": {\n        \"href\": \"/api/bars/487\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/bars/:id/external_links",
              "version": "1",
              "example": "/api/bars/739/external_links"
            }
          ]
        },
        {
          "description": "Returns all child bars for the specified bar (if the selected bar is a container).",
          "name": "child_bars",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccffb99a0@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 92cc5c6299d58027f75a5deace64adf9a3ce9ae9f74fb3d41769c12a29830e95"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Bar"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The bar's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 739,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the child bars. If the view param is not specified or does not exist, the child bars will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "id,name,start_date,end_date",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "id,name,start_date,end_date",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "name=Super Cool Feature",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=effort,from=9,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "id,-name",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Bar::Collection",
                "family": "array",
                "id": "V1-MediaTypes-Bar-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::Bar"
                  },
                  "type": {
                    "name": "V1::MediaTypes::Bar",
                    "family": "hash",
                    "id": "V1-MediaTypes-Bar",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.bar+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/bars/560\",\n    \"id\": 560,\n    \"name\": \"Gather Feedback\",\n    \"start_date\": \"2014-06-04T00:00:00+00:00\",\n    \"end_date\": \"2013-05-17T00:00:00+00:00\",\n    \"description\": \"Reach out to customers and gather their feedback on specific questions and open dialog.\",\n    \"strategic_value\": \"Makes our customers happy, leading to increased retention.\",\n    \"notes\": \"Surveys, interviews, including interactive usability meetings.\",\n    \"percent_done\": 16,\n    \"effort\": 1,\n    \"tags\": [\n      \"Surveys\",\n      \"Interviews\",\n      \"Customer Success\"\n    ],\n    \"fields\": {\n      \"pp_legend\": \"Goal 1\",\n      \"pp_lanes\": \"Lane 2\"\n    },\n    \"timestamps\": {\n      \"created_at\": \"2014-01-02T00:00:00+00:00\",\n      \"updated_at\": \"2014-12-28T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/585\"\n      },\n      \"parent_bar\": {\n        \"href\": \"/api/bars/616\"\n      },\n      \"child_bars\": {\n        \"href\": \"/api/bars/529/child_bars\"\n      },\n      \"external_links\": {\n        \"href\": \"/api/bars/529/external_links\"\n      }\n    }\n  },\n  {\n    \"href\": \"/api/bars/744\",\n    \"id\": 744,\n    \"name\": \"Implementation\",\n    \"start_date\": \"2014-04-15T00:00:00+00:00\",\n    \"end_date\": \"2013-03-25T00:00:00+00:00\",\n    \"description\": \"Implement and test the feature.\",\n    \"strategic_value\": \"Test Driven Development leads to a better product.\",\n    \"notes\": \"Consider using RoR with RSpec.\",\n    \"percent_done\": 25,\n    \"effort\": 3,\n    \"tags\": [\n      \"Rails\",\n      \"RSpec\",\n      \"Code Reviews\"\n    ],\n    \"fields\": {\n      \"pp_legend\": \"Goal 1\",\n      \"pp_lanes\": \"Lane 2\"\n    },\n    \"timestamps\": {\n      \"created_at\": \"2014-05-16T00:00:00+00:00\",\n      \"updated_at\": \"2012-11-06T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/887\"\n      },\n      \"parent_bar\": {\n        \"href\": \"/api/bars/220\"\n      },\n      \"child_bars\": {\n        \"href\": \"/api/bars/529/child_bars\"\n      },\n      \"external_links\": {\n        \"href\": \"/api/bars/529/external_links\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/bars/:id/child_bars",
              "version": "1",
              "example": "/api/bars/739/child_bars"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::Bars",
      "display_name": "Bars",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-Roadmaps": {
      "description": "Roadmaps contain bars and ideas. A user can have access to one or more roadmaps.\nYou can get a list of the roadmaps your user has access to.\n",
      "media_type": {
        "name": "V1::MediaTypes::Roadmap",
        "family": "hash",
        "id": "V1-MediaTypes-Roadmap",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Returns a list of all roadmaps owned by the authenticated user.",
          "name": "index",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccd4975d8@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "view": {
                  "description": "View name with which to render the roadmaps. If the view param is not specified or does not exist, roadmaps will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "href,name,links{custom_fields}",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "href,name,links{custom_fields}",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "name!=Acme Services 5-yr Plan",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=id,from=229,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "name,owner_email",
                  "source": "query"
                }
              },
              "requirements": [

              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Roadmap::Collection",
                "family": "array",
                "id": "V1-MediaTypes-Roadmap-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::Roadmap"
                  },
                  "type": {
                    "name": "V1::MediaTypes::Roadmap",
                    "family": "hash",
                    "id": "V1-MediaTypes-Roadmap",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.roadmap+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/roadmaps/311\",\n    \"id\": 311,\n    \"name\": \"Acme Services 5-yr Plan\",\n    \"description\": \"Acme's roadmap detailing the 5-year feature rollout plan for the Services website.\",\n    \"owner_email\": \"tridominium@mesochroic.example.org\",\n    \"timestamps\": {\n      \"created_at\": \"2014-07-26T00:00:00+00:00\",\n      \"updated_at\": \"2013-05-01T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"bars\": {\n        \"href\": \"/api/roadmaps/501/bars\"\n      },\n      \"ideas\": {\n        \"href\": \"/api/roadmaps/501/ideas\"\n      },\n      \"custom_fields\": {\n        \"href\": \"/api/roadmaps/501/custom_fields\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/roadmaps",
              "version": "1",
              "example": "/api/roadmaps"
            }
          ]
        },
        {
          "description": "Returns the specified roadmap.",
          "name": "show",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccd0a5420@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The roadmap's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 140,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the roadmap. If the view param is not specified or does not exist, the roadmap will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "name,description,links",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "name,description,links",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Roadmap",
                "family": "hash",
                "id": "V1-MediaTypes-Roadmap",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.roadmap+json",
                    "body": "{\n  \"href\": \"/api/roadmaps/140\",\n  \"id\": 140,\n  \"name\": \"Acme Services 5-yr Plan\",\n  \"description\": \"Acme's roadmap detailing the 5-year feature rollout plan for the Services website.\",\n  \"owner_email\": \"storywork@scoliokyposis.example.org\",\n  \"timestamps\": {\n    \"created_at\": \"2014-09-01T00:00:00+00:00\",\n    \"updated_at\": \"2014-01-02T00:00:00+00:00\"\n  },\n  \"links\": {\n    \"bars\": {\n      \"href\": \"/api/roadmaps/501/bars\"\n    },\n    \"ideas\": {\n      \"href\": \"/api/roadmaps/501/ideas\"\n    },\n    \"custom_fields\": {\n      \"href\": \"/api/roadmaps/501/custom_fields\"\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/roadmaps/:id",
              "version": "1",
              "example": "/api/roadmaps/140"
            }
          ]
        },
        {
          "description": "Returns all bars for the specified roadmap.",
          "name": "bars",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffccfa9ba68@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The roadmap's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 140,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the bars. If the view param is not specified or does not exist, the bars will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "href,name,tags",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "href,name,tags",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      },
                      "start_date": {
                        "operators": [
                          "!=",
                          "<",
                          "<=",
                          "=",
                          ">=",
                          ">"
                        ]
                      }
                    }
                  },
                  "example": "name=Design&start_date>=2014-08-24",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=description,from=Implement+and+review+the+design+and+produce+documentation.,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "name,percent_done",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Bar::Collection",
                "family": "array",
                "id": "V1-MediaTypes-Bar-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::Bar"
                  },
                  "type": {
                    "name": "V1::MediaTypes::Bar",
                    "family": "hash",
                    "id": "V1-MediaTypes-Bar",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.bar+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/bars/311\",\n    \"id\": 311,\n    \"name\": \"Implementation\",\n    \"start_date\": \"2013-11-20T00:00:00+00:00\",\n    \"end_date\": \"2013-05-10T00:00:00+00:00\",\n    \"description\": \"Implement and test the feature.\",\n    \"strategic_value\": \"Test Driven Development leads to a better product.\",\n    \"notes\": \"Consider using RoR with RSpec.\",\n    \"percent_done\": 74,\n    \"effort\": 7,\n    \"tags\": [\n      \"Rails\",\n      \"RSpec\",\n      \"Code Reviews\"\n    ],\n    \"fields\": {\n      \"pp_legend\": \"Goal 1\",\n      \"pp_lanes\": \"Lane 2\"\n    },\n    \"timestamps\": {\n      \"created_at\": \"2014-07-26T00:00:00+00:00\",\n      \"updated_at\": \"2013-05-01T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/825\"\n      },\n      \"parent_bar\": {\n        \"href\": \"/api/bars/246\"\n      },\n      \"child_bars\": {\n        \"href\": \"/api/bars/529/child_bars\"\n      },\n      \"external_links\": {\n        \"href\": \"/api/bars/529/external_links\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/roadmaps/:id/bars",
              "version": "1",
              "example": "/api/roadmaps/140/bars"
            }
          ]
        },
        {
          "description": "Returns all ideas for the specified roadmap.",
          "name": "ideas",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcce458da0@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The roadmap's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 140,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the ideas. If the view param is not specified or does not exist, the ideas will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "href,name,tags",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "href,name,tags",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "name=Implementation",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=description,from=Reach+out+to+customers+and+gather+their+feedback+on+specific+questions+and+open+dialog.,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "name,strategic_value",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Idea::Collection",
                "family": "array",
                "id": "V1-MediaTypes-Idea-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::Idea"
                  },
                  "type": {
                    "name": "V1::MediaTypes::Idea",
                    "family": "hash",
                    "id": "V1-MediaTypes-Idea",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.idea+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/ideas/311\",\n    \"id\": 311,\n    \"name\": \"Gather Feedback\",\n    \"description\": \"Reach out to customers and gather their feedback on specific questions and open dialog.\",\n    \"strategic_value\": \"Makes our customers happy, leading to increased retention.\",\n    \"notes\": \"Surveys, interviews, including interactive usability meetings.\",\n    \"percent_done\": 74,\n    \"effort\": 7,\n    \"tags\": [\n      \"Surveys\",\n      \"Interviews\",\n      \"Customer Success\"\n    ],\n    \"fields\": {\n      \"pp_legend\": \"Goal 1\",\n      \"pp_lanes\": \"Lane 2\"\n    },\n    \"timestamps\": {\n      \"created_at\": \"2014-07-26T00:00:00+00:00\",\n      \"updated_at\": \"2013-05-01T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/825\"\n      },\n      \"external_links\": {\n        \"href\": \"/api/ideas/133/external_links\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/roadmaps/:id/ideas",
              "version": "1",
              "example": "/api/roadmaps/140/ideas"
            }
          ]
        },
        {
          "description": "Returns annotations attached to this specific roadmap.",
          "name": "annotations",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd30dbec0@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer f1858befe4b8cbdcf862e6aac78fd2a311d30f2621e43a1ecb457f785a957fde"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Roadmap"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The roadmap's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 140,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the annotations. If the view param is not specified or does not exist, the annotations will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "id,key,value",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "id,key,value",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "key": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "key!=pp_timeline_renderer",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "key"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=value,from=%7B%22some%22%3A+%22JSON%22%2C+%22value%22%3A+%22perhaps%22%7D,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "key"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "key,id",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Annotation::Collection",
                "family": "array",
                "id": "V1-MediaTypes-Annotation-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::Annotation"
                  },
                  "type": {
                    "name": "V1::MediaTypes::Annotation",
                    "family": "hash",
                    "id": "V1-MediaTypes-Annotation",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.annotation+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/annotations/632\",\n    \"id\": 311,\n    \"target_href\": \"/api/roadmaps/161\",\n    \"key\": \"pp_timeline_renderer\",\n    \"value\": \"{\\\"some\\\": \\\"JSON\\\", \\\"value\\\": \\\"perhaps\\\"}\"\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/roadmaps/:id/annotations",
              "version": "1",
              "example": "/api/roadmaps/140/annotations"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::Roadmaps",
      "display_name": "Roadmaps",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-CustomFields": {
      "description": "Custom fields provide the ability to add more information to a bar.\nThere are currently two custom fields--Lanes and Legends--that can be applied to a bar or idea.\nOther custom data will be enabled in the future.\n",
      "media_type": {
        "name": "V1::MediaTypes::CustomField",
        "family": "hash",
        "id": "V1-MediaTypes-CustomField",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Returns a list of all of the roadmap's custom fields.",
          "name": "index",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::CustomField"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd5822b78@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 38f5291880d46da13a5d254a3f4882acc03900eb731bea5b7079a156c2006673"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 38f5291880d46da13a5d254a3f4882acc03900eb731bea5b7079a156c2006673"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::CustomField"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "view": {
                  "description": "View name with which to render the custom fields. If the view param is not specified or does not exist, the custom fields will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "default",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "href,key,display_name,allowed_values",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "href,key,display_name,allowed_values",
                  "source": "query"
                },
                "roadmap_id": {
                  "description": "The roadmap's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 631,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "roadmap_id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The user does not have permissions for the specified roadmap.",
              "status": 403,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::CustomField::Collection",
                "family": "array",
                "id": "V1-MediaTypes-CustomField-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::CustomField"
                  },
                  "type": {
                    "name": "V1::MediaTypes::CustomField",
                    "family": "hash",
                    "id": "V1-MediaTypes-CustomField",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.custom_field+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/roadmaps/522/custom_fields/605\",\n    \"id\": 605,\n    \"key\": \"pp_legend\",\n    \"display_name\": \"Priority\",\n    \"allowed_values\": [\n      \"High\",\n      \"Medium\",\n      \"Low\"\n    ],\n    \"timestamps\": {\n      \"created_at\": \"2014-04-15T00:00:00+00:00\",\n      \"updated_at\": \"2013-05-03T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/522\"\n      }\n    }\n  },\n  {\n    \"href\": \"/api/roadmaps/83/custom_fields/361\",\n    \"id\": 361,\n    \"key\": \"pp_legend\",\n    \"display_name\": \"Priority\",\n    \"allowed_values\": [\n      \"High\",\n      \"Medium\",\n      \"Low\"\n    ],\n    \"timestamps\": {\n      \"created_at\": \"2014-10-21T00:00:00+00:00\",\n      \"updated_at\": \"2013-03-12T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/83\"\n      }\n    }\n  },\n  {\n    \"href\": \"/api/roadmaps/717/custom_fields/719\",\n    \"id\": 719,\n    \"key\": \"pp_legend\",\n    \"display_name\": \"Priority\",\n    \"allowed_values\": [\n      \"High\",\n      \"Medium\",\n      \"Low\"\n    ],\n    \"timestamps\": {\n      \"created_at\": \"2014-07-15T00:00:00+00:00\",\n      \"updated_at\": \"2014-12-01T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/717\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/roadmaps/:roadmap_id/custom_fields",
              "version": "1",
              "example": "/api/roadmaps/631/custom_fields"
            }
          ]
        },
        {
          "description": "Returns the specified custom field.",
          "name": "show",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::CustomField"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd3584940@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 38f5291880d46da13a5d254a3f4882acc03900eb731bea5b7079a156c2006673"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 38f5291880d46da13a5d254a3f4882acc03900eb731bea5b7079a156c2006673"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::CustomField"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The custom field's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 456,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the custom field. If the view param is not specified or does not exist, the custom field will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "default",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "key,display_name,allowed_values",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "key,display_name,allowed_values",
                  "source": "query"
                },
                "roadmap_id": {
                  "description": "The roadmap's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 631,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id",
                    "roadmap_id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::CustomField",
                "family": "hash",
                "id": "V1-MediaTypes-CustomField",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.custom_field+json",
                    "body": "{\n  \"href\": \"/api/roadmaps/741/custom_fields/456\",\n  \"id\": 456,\n  \"key\": \"pp_lanes\",\n  \"display_name\": \"Lanes\",\n  \"allowed_values\": [\n    \"Phase 1\",\n    \"Phase 2\",\n    \"Phase 3\"\n  ],\n  \"timestamps\": {\n    \"created_at\": \"2014-02-02T00:00:00+00:00\",\n    \"updated_at\": \"2013-01-08T00:00:00+00:00\"\n  },\n  \"links\": {\n    \"roadmap\": {\n      \"href\": \"/api/roadmaps/741\"\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/roadmaps/:roadmap_id/custom_fields/:id",
              "version": "1",
              "example": "/api/roadmaps/631/custom_fields/456"
            }
          ]
        },
        {
          "description": "Updates the specified custom field.",
          "name": "update",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::CustomField"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd6819838@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 38f5291880d46da13a5d254a3f4882acc03900eb731bea5b7079a156c2006673"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 38f5291880d46da13a5d254a3f4882acc03900eb731bea5b7079a156c2006673"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::CustomField"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The custom field's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 456,
                  "source": "url"
                },
                "roadmap_id": {
                  "description": "The roadmap's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 631,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id",
                    "roadmap_id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::CustomField"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "display_name": {
                  "description": "Title of the custom field.",
                  "example_definition": "#<Proc:0x007ffcd6823068@/Users/blanquer/dev/productplan/productplan/api/design/v1/endpoints/custom_fields.rb:77 (lambda)>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Lanes"
                },
                "allowed_values_to_add": {
                  "description": "Add one or more values allowed for the custom field.",
                  "example_definition": "#<Proc:0x007ffcd6822140@/Users/blanquer/dev/productplan/productplan/api/design/v1/endpoints/custom_fields.rb:82 (lambda)>",
                  "type": {
                    "name": "Collection",
                    "family": "array",
                    "id": null,
                    "options": {
                    },
                    "member_attribute": {
                      "type": {
                        "name": "String",
                        "family": "string",
                        "id": "Attributor-String"
                      },
                      "example": "Phase 1"
                    }
                  },
                  "example": [
                    "Phase 1",
                    "Phase 2",
                    "Phase 3"
                  ]
                },
                "allowed_values_to_remove": {
                  "description": "Remove one or more of the values allowed for the custom field.",
                  "example_definition": "#<Proc:0x007ffcd6821b78@/Users/blanquer/dev/productplan/productplan/api/design/v1/endpoints/custom_fields.rb:87 (lambda)>",
                  "type": {
                    "name": "Collection",
                    "family": "array",
                    "id": null,
                    "options": {
                    },
                    "member_attribute": {
                      "type": {
                        "name": "String",
                        "family": "string",
                        "id": "Attributor-String"
                      },
                      "example": "High"
                    }
                  },
                  "example": [
                    "High",
                    "Medium",
                    "Low"
                  ]
                },
                "allowed_values_to_rename": {
                  "description": "Rename one or more of the values allowed for the custom field.",
                  "example_definition": "#<Proc:0x007ffcd6821358@/Users/blanquer/dev/productplan/productplan/api/design/v1/endpoints/custom_fields.rb:92 (lambda)>",
                  "options": {
                    "allow_extra": false
                  },
                  "type": {
                    "name": "Hash",
                    "family": "hash",
                    "id": null,
                    "key": {
                      "type": {
                        "name": "String",
                        "family": "string",
                        "id": "Attributor-String"
                      }
                    },
                    "value": {
                      "type": {
                        "name": "String",
                        "family": "string",
                        "id": "Attributor-String"
                      }
                    }
                  },
                  "example": {
                    "Old Value": "New Value"
                  }
                }
              },
              "requirements": [

              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"display_name\": \"Lanes\",\n  \"allowed_values_to_add\": [\n    \"Phase 1\",\n    \"Phase 2\",\n    \"Phase 3\"\n  ],\n  \"allowed_values_to_remove\": [\n    \"High\",\n    \"Medium\",\n    \"Low\"\n  ],\n  \"allowed_values_to_rename\": {\n    \"Old Value\": \"New Value\"\n  }\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "display_name=Lanes&allowed_values_to_add=Phase+1&allowed_values_to_add=Phase+2&allowed_values_to_add=Phase+3&allowed_values_to_remove=High&allowed_values_to_remove=Medium&allowed_values_to_remove=Low&allowed_values_to_rename=%7B%22Old+Value%22%3D%3E%22New+Value%22%7D"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "PATCH",
              "path": "/api/roadmaps/:roadmap_id/custom_fields/:id",
              "version": "1",
              "example": "/api/roadmaps/631/custom_fields/456"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::CustomFields",
      "parent": "V1-Endpoints-Roadmaps",
      "display_name": "CustomFields",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-ExternalLinks": {
      "description": "External Links are outside resources associated with a bar.\nThey can be web URL's referring to documents, designs, or specifications on other systems\nsuch as DropBox or GoogleDrive. They can also be used to create an integration link between\nProductPlan and another system. ProductPlan integrations include JIRA and Pivotal Tracker and\nthey are special types which provide synchronizing of percentage complete between those systems\nand ProductPlan.\n",
      "media_type": {
        "name": "V1::MediaTypes::ExternalLink",
        "family": "hash",
        "id": "V1-MediaTypes-ExternalLink",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Returns a list of all external links owned by the authenticated user.",
          "name": "index",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd5947eb8@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "view": {
                  "description": "View name with which to render the external links. If the view param is not specified or does not exist, external links will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "href,type,name,uri",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "href,type,name,uri",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "bar.id": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      },
                      "idea.id": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      },
                      "type": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      },
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "name!=Current Documentation&type=web",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=id,from=928,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "name,-id",
                  "source": "query"
                }
              },
              "requirements": [

              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::ExternalLink::Collection",
                "family": "array",
                "id": "V1-MediaTypes-ExternalLink-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::ExternalLink"
                  },
                  "type": {
                    "name": "V1::MediaTypes::ExternalLink",
                    "family": "hash",
                    "id": "V1-MediaTypes-ExternalLink",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.external_link+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/external_links/166\",\n    \"id\": 166,\n    \"type\": \"jira\",\n    \"name\": \"User Test Cases\",\n    \"uri\": \"https://acme.atlassian.net/browse/UTC-27\",\n    \"links\": {\n      \"bar\": {\n        \"href\": \"/api/bars/863\"\n      }\n    }\n  },\n  {\n    \"href\": \"/api/external_links/415\",\n    \"id\": 415,\n    \"type\": \"web\",\n    \"name\": \"Support Docs\",\n    \"uri\": \"http://www.acme.com/support/9876\",\n    \"links\": {\n      \"bar\": {\n        \"href\": \"/api/bars/402\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/external_links",
              "version": "1",
              "example": "/api/external_links"
            }
          ]
        },
        {
          "description": "Creates a new external link.",
          "name": "create",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd68860f0@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
            }
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "bar": {
                  "description": "Related bar resource, to which the external link belongs. An external link belongs to exactly one Idea *_or_* one Bar.",
                  "options": {
                    "reference": "V1::MediaTypes::Bar"
                  },
                  "type": {
                    "name": "Struct",
                    "family": "hash",
                    "id": null,
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    },
                    "attributes": {
                      "id": {
                        "description": "The bar's unique database identifier.",
                        "required": true,
                        "type": {
                          "name": "Integer",
                          "family": "numeric",
                          "id": "Attributor-Integer"
                        },
                        "example": 911
                      }
                    },
                    "requirements": [
                      {
                        "type": "all",
                        "attributes": [
                          "id"
                        ]
                      }
                    ]
                  }
                },
                "idea": {
                  "description": "Related idea resource, to which the external link belongs. An external link belongs to exactly one Idea *_or_* one Bar.",
                  "options": {
                    "reference": "V1::MediaTypes::Idea"
                  },
                  "type": {
                    "name": "Struct",
                    "family": "hash",
                    "id": null,
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    },
                    "attributes": {
                      "id": {
                        "description": "The idea's unique database identifier.",
                        "required": true,
                        "type": {
                          "name": "Integer",
                          "family": "numeric",
                          "id": "Attributor-Integer"
                        }
                      }
                    },
                    "requirements": [
                      {
                        "type": "all",
                        "attributes": [
                          "id"
                        ]
                      }
                    ]
                  }
                },
                "type": {
                  "description": "Type of the linked resource.",
                  "values": [
                    "web",
                    "jira",
                    "tracker"
                  ],
                  "required": true,
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "jira"
                },
                "name": {
                  "description": "Title of the external link.",
                  "example_definition": "#<Proc:0x007ffcce929708@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/external_link.rb:39>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "User Test Cases"
                },
                "uri": {
                  "description": "HREF to the external resource.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcce929370@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/external_link.rb:53>",
                  "type": {
                    "name": "URI",
                    "family": "string",
                    "id": "Attributor-URI"
                  },
                  "example": "https://acme.atlassian.net/browse/UTC-27"
                }
              },
              "requirements": [
                {
                  "type": "exactly",
                  "attributes": [
                    "bar",
                    "idea"
                  ],
                  "count": 1
                },
                {
                  "type": "all",
                  "attributes": [
                    "type",
                    "uri"
                  ]
                }
              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"bar\": {\n    \"id\": 911\n  },\n  \"type\": \"jira\",\n  \"name\": \"User Test Cases\",\n  \"uri\": \"https://acme.atlassian.net/browse/UTC-27\"\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "bar=%7B%3Aid%3D%3E911%7D&type=jira&name=User+Test+Cases&uri=https%3A%2F%2Facme.atlassian.net%2Fbrowse%2FUTC-27"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The user does not have permissions for the specified bar.",
              "status": 403,
              "headers": {
              }
            },
            "created": {
              "description": "The request has been fulfilled and resulted in a new resource being created.",
              "status": 201,
              "headers": {
              },
              "location": {
                "value": "/api/external_links/:id",
                "type": "string"
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "POST",
              "path": "/api/external_links",
              "version": "1",
              "example": "/api/external_links"
            }
          ]
        },
        {
          "description": "Returns the specified external link.",
          "name": "show",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd3615558@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The external link's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 646,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the external link. If the view param is not specified or does not exist, the external link will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "type,name,uri",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "type,name,uri",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::ExternalLink",
                "family": "hash",
                "id": "V1-MediaTypes-ExternalLink",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.external_link+json",
                    "body": "{\n  \"href\": \"/api/external_links/646\",\n  \"id\": 646,\n  \"type\": \"jira\",\n  \"name\": \"User Test Cases\",\n  \"uri\": \"https://acme.atlassian.net/browse/UTC-27\",\n  \"links\": {\n    \"bar\": {\n      \"href\": \"/api/bars/911\"\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/external_links/:id",
              "version": "1",
              "example": "/api/external_links/646"
            }
          ]
        },
        {
          "description": "Updates the specified external link.",
          "name": "update",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd68dd4e0@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The external link's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 646,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "name": {
                  "description": "Title of the external link.",
                  "example_definition": "#<Proc:0x007ffcd36ab828@/Users/blanquer/dev/productplan/productplan/api/design/v1/endpoints/external_links.rb:112 (lambda)>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Current Documentation"
                },
                "uri": {
                  "description": "HREF to the external resource.",
                  "example_definition": "#<Proc:0x007ffcd36ab418@/Users/blanquer/dev/productplan/productplan/api/design/v1/endpoints/external_links.rb:113 (lambda)>",
                  "type": {
                    "name": "URI",
                    "family": "string",
                    "id": "Attributor-URI"
                  },
                  "example": "http://wiki.acme.com/products/12345"
                }
              },
              "requirements": [

              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"name\": \"Current Documentation\",\n  \"uri\": \"http://wiki.acme.com/products/12345\"\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "name=Current+Documentation&uri=http%3A%2F%2Fwiki.acme.com%2Fproducts%2F12345"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "PATCH",
              "path": "/api/external_links/:id",
              "version": "1",
              "example": "/api/external_links/646"
            }
          ]
        },
        {
          "description": "Deletes the specified external link.",
          "name": "destroy",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd59a1e18@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 90aec090d4cbcf9c62c362fd125502d3cda35cd360a12e810cece8c8352ae007"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::ExternalLink"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The external link's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 646,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "DELETE",
              "path": "/api/external_links/:id",
              "version": "1",
              "example": "/api/external_links/646"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::ExternalLinks",
      "display_name": "ExternalLinks",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-Ideas": {
      "description": "Ideas are bars or containers that appear in the Parking Lot.\nThe Parking Lot is a backlog that allows you to capture ideas and organize them before moving them to the roadmap.\n",
      "media_type": {
        "name": "V1::MediaTypes::Idea",
        "family": "hash",
        "id": "V1-MediaTypes-Idea",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Import one or multiple ideas into your roadmap.\n\nThis endpoint kicks off an asynchronous job and sets the `Location` header in the response,\nwhich will point you to where you can retrieve the status of the job\n(<a href=\"#/1/controller/V1-Endpoints-Jobs/show\">Jobs#show</a>).\n",
          "name": "import",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd36bdaa0@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
            }
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "roadmap": {
                  "description": "Related roadmap resource, to which the idea belongs.",
                  "required": true,
                  "options": {
                    "reference": "V1::MediaTypes::Roadmap"
                  },
                  "type": {
                    "name": "Struct",
                    "family": "hash",
                    "id": null,
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    },
                    "attributes": {
                      "id": {
                        "description": "The roadmap's unique database identifier.",
                        "required": true,
                        "type": {
                          "name": "Integer",
                          "family": "numeric",
                          "id": "Attributor-Integer"
                        },
                        "example": 776
                      }
                    },
                    "requirements": [
                      {
                        "type": "all",
                        "attributes": [
                          "id"
                        ]
                      }
                    ]
                  }
                },
                "ideas": {
                  "required": true,
                  "options": {
                    "reference": "V1::MediaTypes::Idea"
                  },
                  "type": {
                    "name": "Collection",
                    "family": "array",
                    "id": null,
                    "options": {
                    },
                    "member_attribute": {
                      "options": {
                        "reference": "V1::MediaTypes::Idea"
                      },
                      "type": {
                        "name": "Struct",
                        "family": "hash",
                        "id": null,
                        "key": {
                          "type": {
                            "name": "Symbol",
                            "family": "string",
                            "id": "Attributor-Symbol"
                          }
                        },
                        "attributes": {
                          "name": {
                            "description": "Title of the idea.",
                            "required": true,
                            "example_definition": "#<Proc:0x007ffcd5dd7c08@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:28 (lambda)>",
                            "type": {
                              "name": "String",
                              "family": "string",
                              "id": "Attributor-String"
                            },
                            "example": "Design"
                          },
                          "description": {
                            "description": "In-depth explanation of what the idea represents.",
                            "example_definition": "#<Proc:0x007ffcd5dd7870@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:33>",
                            "type": {
                              "name": "String",
                              "family": "string",
                              "id": "Attributor-String"
                            },
                            "example": "Implement and review the design and produce documentation."
                          },
                          "strategic_value": {
                            "description": "Describe why this is important.",
                            "example_definition": "#<Proc:0x007ffcd5dd74d8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:44>",
                            "type": {
                              "name": "String",
                              "family": "string",
                              "id": "Attributor-String"
                            },
                            "example": "Upfront design and documentation leads to a better product."
                          },
                          "notes": {
                            "description": "Additional information to be shared.",
                            "example_definition": "#<Proc:0x007ffcd5dd7140@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:55>",
                            "type": {
                              "name": "String",
                              "family": "string",
                              "id": "Attributor-String"
                            },
                            "example": "Rapid prototyping can also help for the UI components."
                          },
                          "effort": {
                            "values": [
                              "0",
                              "1",
                              "2",
                              "3",
                              "4",
                              "5",
                              "6",
                              "7",
                              "8",
                              "9",
                              "10",
                              "Small",
                              "Medium",
                              "Large",
                              "Extra Large"
                            ],
                            "type": {
                              "name": "String",
                              "family": "string",
                              "id": "Attributor-String"
                            },
                            "example": "10"
                          },
                          "percent_done": {
                            "description": "Determines the shading of the bar to indicate progress. Null is fully saturated. 0-100 displays a gradual shading until fully saturated.",
                            "options": {
                              "min": 0,
                              "max": 100
                            },
                            "type": {
                              "name": "Integer",
                              "family": "numeric",
                              "id": "Attributor-Integer"
                            },
                            "example": 77
                          },
                          "tags": {
                            "description": "Keywords and terms associated with the idea.",
                            "example_definition": "#<Proc:0x007ffcd5dd64c0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:78>",
                            "type": {
                              "name": "Collection",
                              "family": "array",
                              "id": null,
                              "options": {
                              },
                              "member_attribute": {
                                "type": {
                                  "name": "String",
                                  "family": "string",
                                  "id": "Attributor-String"
                                },
                                "example": "Design Reviews"
                              }
                            },
                            "example": [
                              "Design Reviews",
                              "Documentation",
                              "Prototype"
                            ]
                          },
                          "fields": {
                            "description": "The selected value for each custom field.  `{ roadmap.custom_fields[n].key => value }`",
                            "example_definition": "#<Proc:0x007ffcd5dd5de0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:89 (lambda)>",
                            "options": {
                              "allow_extra": false
                            },
                            "type": {
                              "name": "Hash",
                              "family": "hash",
                              "id": null,
                              "key": {
                                "type": {
                                  "name": "Symbol",
                                  "family": "string",
                                  "id": "Attributor-Symbol"
                                }
                              },
                              "value": {
                                "type": {
                                  "name": "Object",
                                  "family": "any",
                                  "id": "Attributor-Object"
                                }
                              }
                            },
                            "example": {
                              "pp_legend": "Goal 1",
                              "pp_lanes": "Lane 2"
                            }
                          },
                          "external_links": {
                            "description": "Linked resources external to the idea.",
                            "example_definition": "#<Proc:0x007ffcd61971e0@/Users/blanquer/dev/productplan/productplan/api/design/v1/endpoints/ideas.rb:45 (lambda)>",
                            "options": {
                              "reference": "V1::MediaTypes::ExternalLink"
                            },
                            "type": {
                              "name": "Collection",
                              "family": "array",
                              "id": null,
                              "options": {
                              },
                              "member_attribute": {
                                "options": {
                                  "reference": "V1::MediaTypes::ExternalLink"
                                },
                                "type": {
                                  "name": "Struct",
                                  "family": "hash",
                                  "id": null,
                                  "key": {
                                    "type": {
                                      "name": "Symbol",
                                      "family": "string",
                                      "id": "Attributor-Symbol"
                                    }
                                  },
                                  "attributes": {
                                    "type": {
                                      "description": "Type of the linked resource.",
                                      "values": [
                                        "web",
                                        "jira",
                                        "tracker"
                                      ],
                                      "required": true,
                                      "type": {
                                        "name": "Symbol",
                                        "family": "string",
                                        "id": "Attributor-Symbol"
                                      },
                                      "example": "jira"
                                    },
                                    "name": {
                                      "description": "Title of the external link.",
                                      "example_definition": "#<Proc:0x007ffcce929708@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/external_link.rb:39>",
                                      "type": {
                                        "name": "String",
                                        "family": "string",
                                        "id": "Attributor-String"
                                      },
                                      "example": "User Test Cases"
                                    },
                                    "uri": {
                                      "description": "HREF to the external resource.",
                                      "required": true,
                                      "example_definition": "#<Proc:0x007ffcce929370@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/external_link.rb:53>",
                                      "type": {
                                        "name": "URI",
                                        "family": "string",
                                        "id": "Attributor-URI"
                                      },
                                      "example": "https://acme.atlassian.net/browse/UTC-27"
                                    }
                                  },
                                  "requirements": [
                                    {
                                      "type": "all",
                                      "attributes": [
                                        "type",
                                        "uri"
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "type": "jira",
                                "name": "User Test Cases",
                                "uri": "https://acme.atlassian.net/browse/UTC-27"
                              }
                            ]
                          }
                        },
                        "requirements": [
                          {
                            "type": "all",
                            "attributes": [
                              "name"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "example": [
                    {
                      "name": "Design",
                      "description": "Implement and review the design and produce documentation.",
                      "strategic_value": "Upfront design and documentation leads to a better product.",
                      "notes": "Rapid prototyping can also help for the UI components.",
                      "effort": "10",
                      "percent_done": 77,
                      "tags": [
                        "Design Reviews",
                        "Documentation",
                        "Prototype"
                      ],
                      "fields": {
                        "pp_legend": "Goal 1",
                        "pp_lanes": "Lane 2"
                      },
                      "external_links": [
                        {
                          "type": "jira",
                          "name": "User Test Cases",
                          "uri": "https://acme.atlassian.net/browse/UTC-27"
                        }
                      ]
                    },
                    {
                      "name": "Implementation",
                      "description": "Implement and test the feature.",
                      "strategic_value": "Test Driven Development leads to a better product.",
                      "notes": "Consider using RoR with RSpec.",
                      "effort": "7",
                      "percent_done": 25,
                      "tags": [
                        "Rails",
                        "RSpec",
                        "Code Reviews"
                      ],
                      "fields": {
                        "pp_legend": "Goal 1",
                        "pp_lanes": "Lane 2"
                      },
                      "external_links": [
                        {
                          "type": "tracker",
                          "name": "Super Cool Feature",
                          "uri": "https://www.pivotaltracker.com/story/show/141128831"
                        },
                        {
                          "type": "tracker",
                          "name": "Super Cool Feature",
                          "uri": "https://www.pivotaltracker.com/story/show/141128831"
                        },
                        {
                          "type": "jira",
                          "name": "User Test Cases",
                          "uri": "https://acme.atlassian.net/browse/UTC-27"
                        }
                      ]
                    },
                    {
                      "name": "Implementation",
                      "description": "Implement and test the feature.",
                      "strategic_value": "Test Driven Development leads to a better product.",
                      "notes": "Consider using RoR with RSpec.",
                      "effort": "10",
                      "percent_done": 30,
                      "tags": [
                        "Rails",
                        "RSpec",
                        "Code Reviews"
                      ],
                      "fields": {
                        "pp_legend": "Goal 1",
                        "pp_lanes": "Lane 2"
                      },
                      "external_links": [
                        {
                          "type": "jira",
                          "name": "User Test Cases",
                          "uri": "https://acme.atlassian.net/browse/UTC-27"
                        }
                      ]
                    }
                  ]
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "roadmap",
                    "ideas"
                  ]
                }
              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"roadmap\": {\n    \"id\": 776\n  },\n  \"ideas\": [\n    {\n      \"name\": \"Design\",\n      \"description\": \"Implement and review the design and produce documentation.\",\n      \"strategic_value\": \"Upfront design and documentation leads to a better product.\",\n      \"notes\": \"Rapid prototyping can also help for the UI components.\",\n      \"effort\": \"10\",\n      \"percent_done\": 77,\n      \"tags\": [\n        \"Design Reviews\",\n        \"Documentation\",\n        \"Prototype\"\n      ],\n      \"fields\": {\n        \"pp_legend\": \"Goal 1\",\n        \"pp_lanes\": \"Lane 2\"\n      },\n      \"external_links\": [\n        {\n          \"type\": \"jira\",\n          \"name\": \"User Test Cases\",\n          \"uri\": \"https://acme.atlassian.net/browse/UTC-27\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Implementation\",\n      \"description\": \"Implement and test the feature.\",\n      \"strategic_value\": \"Test Driven Development leads to a better product.\",\n      \"notes\": \"Consider using RoR with RSpec.\",\n      \"effort\": \"7\",\n      \"percent_done\": 25,\n      \"tags\": [\n        \"Rails\",\n        \"RSpec\",\n        \"Code Reviews\"\n      ],\n      \"fields\": {\n        \"pp_legend\": \"Goal 1\",\n        \"pp_lanes\": \"Lane 2\"\n      },\n      \"external_links\": [\n        {\n          \"type\": \"tracker\",\n          \"name\": \"Super Cool Feature\",\n          \"uri\": \"https://www.pivotaltracker.com/story/show/141128831\"\n        },\n        {\n          \"type\": \"tracker\",\n          \"name\": \"Super Cool Feature\",\n          \"uri\": \"https://www.pivotaltracker.com/story/show/141128831\"\n        },\n        {\n          \"type\": \"jira\",\n          \"name\": \"User Test Cases\",\n          \"uri\": \"https://acme.atlassian.net/browse/UTC-27\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Implementation\",\n      \"description\": \"Implement and test the feature.\",\n      \"strategic_value\": \"Test Driven Development leads to a better product.\",\n      \"notes\": \"Consider using RoR with RSpec.\",\n      \"effort\": \"10\",\n      \"percent_done\": 30,\n      \"tags\": [\n        \"Rails\",\n        \"RSpec\",\n        \"Code Reviews\"\n      ],\n      \"fields\": {\n        \"pp_legend\": \"Goal 1\",\n        \"pp_lanes\": \"Lane 2\"\n      },\n      \"external_links\": [\n        {\n          \"type\": \"jira\",\n          \"name\": \"User Test Cases\",\n          \"uri\": \"https://acme.atlassian.net/browse/UTC-27\"\n        }\n      ]\n    }\n  ]\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "roadmap=%7B%3Aid%3D%3E776%7D&ideas=%7B%3Aname%3D%3E%22Design%22%2C+%3Adescription%3D%3E%22Implement+and+review+the+design+and+produce+documentation.%22%2C+%3Astrategic_value%3D%3E%22Upfront+design+and+documentation+leads+to+a+better+product.%22%2C+%3Anotes%3D%3E%22Rapid+prototyping+can+also+help+for+the+UI+components.%22%2C+%3Aeffort%3D%3E%2210%22%2C+%3Apercent_done%3D%3E77%2C+%3Atags%3D%3E%5B%22Design+Reviews%22%2C+%22Documentation%22%2C+%22Prototype%22%5D%2C+%3Afields%3D%3E%7B%3App_legend%3D%3E%22Goal+1%22%2C+%3App_lanes%3D%3E%22Lane+2%22%7D%2C+%3Aexternal_links%3D%3E%5B%7B%3Atype%3D%3E%3Ajira%2C+%3Aname%3D%3E%22User+Test+Cases%22%2C+%3Auri%3D%3E%22https%3A%2F%2Facme.atlassian.net%2Fbrowse%2FUTC-27%22%7D%5D%7D&ideas=%7B%3Aname%3D%3E%22Implementation%22%2C+%3Adescription%3D%3E%22Implement+and+test+the+feature.%22%2C+%3Astrategic_value%3D%3E%22Test+Driven+Development+leads+to+a+better+product.%22%2C+%3Anotes%3D%3E%22Consider+using+RoR+with+RSpec.%22%2C+%3Aeffort%3D%3E%227%22%2C+%3Apercent_done%3D%3E25%2C+%3Atags%3D%3E%5B%22Rails%22%2C+%22RSpec%22%2C+%22Code+Reviews%22%5D%2C+%3Afields%3D%3E%7B%3App_legend%3D%3E%22Goal+1%22%2C+%3App_lanes%3D%3E%22Lane+2%22%7D%2C+%3Aexternal_links%3D%3E%5B%7B%3Atype%3D%3E%3Atracker%2C+%3Aname%3D%3E%22Super+Cool+Feature%22%2C+%3Auri%3D%3E%22https%3A%2F%2Fwww.pivotaltracker.com%2Fstory%2Fshow%2F141128831%22%7D%2C+%7B%3Atype%3D%3E%3Atracker%2C+%3Aname%3D%3E%22Super+Cool+Feature%22%2C+%3Auri%3D%3E%22https%3A%2F%2Fwww.pivotaltracker.com%2Fstory%2Fshow%2F141128831%22%7D%2C+%7B%3Atype%3D%3E%3Ajira%2C+%3Aname%3D%3E%22User+Test+Cases%22%2C+%3Auri%3D%3E%22https%3A%2F%2Facme.atlassian.net%2Fbrowse%2FUTC-27%22%7D%5D%7D&ideas=%7B%3Aname%3D%3E%22Implementation%22%2C+%3Adescription%3D%3E%22Implement+and+test+the+feature.%22%2C+%3Astrategic_value%3D%3E%22Test+Driven+Development+leads+to+a+better+product.%22%2C+%3Anotes%3D%3E%22Consider+using+RoR+with+RSpec.%22%2C+%3Aeffort%3D%3E%2210%22%2C+%3Apercent_done%3D%3E30%2C+%3Atags%3D%3E%5B%22Rails%22%2C+%22RSpec%22%2C+%22Code+Reviews%22%5D%2C+%3Afields%3D%3E%7B%3App_legend%3D%3E%22Goal+1%22%2C+%3App_lanes%3D%3E%22Lane+2%22%7D%2C+%3Aexternal_links%3D%3E%5B%7B%3Atype%3D%3E%3Ajira%2C+%3Aname%3D%3E%22User+Test+Cases%22%2C+%3Auri%3D%3E%22https%3A%2F%2Facme.atlassian.net%2Fbrowse%2FUTC-27%22%7D%5D%7D"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The user does not have permissions for the specified roadmap.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "accepted": {
              "description": "A job to create Ideas from the given payload has been created and queued for processing.\nYou can retrieve the status of the job from the\n<a href=\"#/1/controller/V1-Endpoints-Jobs/show\">Jobs#show</a> endpoint.\nIts URI is specified in the response's `Location` header.\n",
              "status": 202,
              "headers": {
              },
              "location": {
                "value": "/api/jobs/:uuid",
                "type": "string"
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "POST",
              "path": "/api/ideas/actions/import",
              "version": "1",
              "example": "/api/ideas/actions/import"
            }
          ]
        },
        {
          "description": "Returns a list of all ideas owned by the authenticated user.",
          "name": "index",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd6421ed8@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "view": {
                  "description": "View name with which to render the ideas. If the view param is not specified or does not exist, the ideas will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "id,name,tags,links{roadmap}",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "id,name,tags,links{roadmap}",
                  "source": "query"
                },
                "filters": {
                  "description": "Filter ideas on roadmap.id, or name.",
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "roadmap.id": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      },
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "name=Gather Feedback",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=id,from=121,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "id,-description",
                  "source": "query"
                }
              },
              "requirements": [

              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Idea::Collection",
                "family": "array",
                "id": "V1-MediaTypes-Idea-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::Idea"
                  },
                  "type": {
                    "name": "V1::MediaTypes::Idea",
                    "family": "hash",
                    "id": "V1-MediaTypes-Idea",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.idea+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/ideas/542\",\n    \"id\": 542,\n    \"name\": \"Implementation\",\n    \"description\": \"Implement and test the feature.\",\n    \"strategic_value\": \"Test Driven Development leads to a better product.\",\n    \"notes\": \"Consider using RoR with RSpec.\",\n    \"percent_done\": 5,\n    \"effort\": 7,\n    \"tags\": [\n      \"Rails\",\n      \"RSpec\",\n      \"Code Reviews\"\n    ],\n    \"fields\": {\n      \"pp_legend\": \"Goal 1\",\n      \"pp_lanes\": \"Lane 2\"\n    },\n    \"timestamps\": {\n      \"created_at\": \"2013-09-25T00:00:00+00:00\",\n      \"updated_at\": \"2014-09-27T00:00:00+00:00\"\n    },\n    \"links\": {\n      \"roadmap\": {\n        \"href\": \"/api/roadmaps/468\"\n      },\n      \"external_links\": {\n        \"href\": \"/api/ideas/133/external_links\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/ideas",
              "version": "1",
              "example": "/api/ideas"
            }
          ]
        },
        {
          "description": "Creates a new idea.",
          "name": "create",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd6480c30@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
            }
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "roadmap": {
                  "description": "Related roadmap resource, to which the idea belongs.",
                  "required": true,
                  "options": {
                    "reference": "V1::MediaTypes::Roadmap"
                  },
                  "type": {
                    "name": "Struct",
                    "family": "hash",
                    "id": null,
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    },
                    "attributes": {
                      "id": {
                        "description": "The roadmap's unique database identifier.",
                        "required": true,
                        "type": {
                          "name": "Integer",
                          "family": "numeric",
                          "id": "Attributor-Integer"
                        },
                        "example": 776
                      }
                    },
                    "requirements": [
                      {
                        "type": "all",
                        "attributes": [
                          "id"
                        ]
                      }
                    ]
                  }
                },
                "name": {
                  "description": "Title of the idea.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd5dd7c08@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:28 (lambda)>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Gather Feedback"
                },
                "description": {
                  "description": "In-depth explanation of what the idea represents.",
                  "example_definition": "#<Proc:0x007ffcd5dd7870@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:33>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Reach out to customers and gather their feedback on specific questions and open dialog."
                },
                "strategic_value": {
                  "description": "Describe why this is important.",
                  "example_definition": "#<Proc:0x007ffcd5dd74d8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:44>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Makes our customers happy, leading to increased retention."
                },
                "percent_done": {
                  "description": "Determines the shading of the bar to indicate progress. Null is fully saturated. 0-100 displays a gradual shading until fully saturated.",
                  "options": {
                    "min": 0,
                    "max": 100
                  },
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 78
                },
                "effort": {
                  "description": "Displays on the bar to indicate the amount of effort needed to complete.",
                  "options": {
                    "min": 0,
                    "max": 10
                  },
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 5
                },
                "notes": {
                  "description": "Additional information to be shared.",
                  "example_definition": "#<Proc:0x007ffcd5dd7140@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:55>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Surveys, interviews, including interactive usability meetings."
                },
                "tags": {
                  "description": "Keywords and terms associated with the idea.",
                  "example_definition": "#<Proc:0x007ffcd5dd64c0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:78>",
                  "type": {
                    "name": "Collection",
                    "family": "array",
                    "id": null,
                    "options": {
                    },
                    "member_attribute": {
                      "type": {
                        "name": "String",
                        "family": "string",
                        "id": "Attributor-String"
                      },
                      "example": "Surveys"
                    }
                  },
                  "example": [
                    "Surveys",
                    "Interviews",
                    "Customer Success"
                  ]
                },
                "fields": {
                  "description": "The selected value for each custom field.  `{ roadmap.custom_fields[n].key => value }`",
                  "example_definition": "#<Proc:0x007ffcd5dd5de0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:89 (lambda)>",
                  "options": {
                    "allow_extra": false
                  },
                  "type": {
                    "name": "Hash",
                    "family": "hash",
                    "id": null,
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    },
                    "value": {
                      "type": {
                        "name": "Object",
                        "family": "any",
                        "id": "Attributor-Object"
                      }
                    }
                  },
                  "example": {
                    "pp_legend": "Goal 1",
                    "pp_lanes": "Lane 2"
                  }
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "roadmap",
                    "name"
                  ]
                }
              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"roadmap\": {\n    \"id\": 776\n  },\n  \"name\": \"Gather Feedback\",\n  \"description\": \"Reach out to customers and gather their feedback on specific questions and open dialog.\",\n  \"strategic_value\": \"Makes our customers happy, leading to increased retention.\",\n  \"percent_done\": 78,\n  \"effort\": 5,\n  \"notes\": \"Surveys, interviews, including interactive usability meetings.\",\n  \"tags\": [\n    \"Surveys\",\n    \"Interviews\",\n    \"Customer Success\"\n  ],\n  \"fields\": {\n    \"pp_legend\": \"Goal 1\",\n    \"pp_lanes\": \"Lane 2\"\n  }\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "roadmap=%7B%3Aid%3D%3E776%7D&name=Gather+Feedback&description=Reach+out+to+customers+and+gather+their+feedback+on+specific+questions+and+open+dialog.&strategic_value=Makes+our+customers+happy%2C+leading+to+increased+retention.&percent_done=78&effort=5&notes=Surveys%2C+interviews%2C+including+interactive+usability+meetings.&tags=Surveys&tags=Interviews&tags=Customer+Success&fields=%7B%3App_legend%3D%3E%22Goal+1%22%2C+%3App_lanes%3D%3E%22Lane+2%22%7D"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The user does not have permissions for the specified roadmap.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "created": {
              "description": "The request has been fulfilled and resulted in a new resource being created.",
              "status": 201,
              "headers": {
              },
              "location": {
                "value": "/api/ideas/:id",
                "type": "string"
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "POST",
              "path": "/api/ideas",
              "version": "1",
              "example": "/api/ideas"
            }
          ]
        },
        {
          "description": "Returns the specified idea.",
          "name": "show",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd6454860@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The idea's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 149,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the idea. If the view param is not specified or does not exist, the idea will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "name,description",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "name,description",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Idea",
                "family": "hash",
                "id": "V1-MediaTypes-Idea",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.idea+json",
                    "body": "{\n  \"href\": \"/api/ideas/149\",\n  \"id\": 149,\n  \"name\": \"Gather Feedback\",\n  \"description\": \"Reach out to customers and gather their feedback on specific questions and open dialog.\",\n  \"strategic_value\": \"Makes our customers happy, leading to increased retention.\",\n  \"notes\": \"Surveys, interviews, including interactive usability meetings.\",\n  \"percent_done\": 78,\n  \"effort\": 5,\n  \"tags\": [\n    \"Surveys\",\n    \"Interviews\",\n    \"Customer Success\"\n  ],\n  \"fields\": {\n    \"pp_legend\": \"Goal 1\",\n    \"pp_lanes\": \"Lane 2\"\n  },\n  \"timestamps\": {\n    \"created_at\": \"2012-12-04T00:00:00+00:00\",\n    \"updated_at\": \"2014-12-13T00:00:00+00:00\"\n  },\n  \"links\": {\n    \"roadmap\": {\n      \"href\": \"/api/roadmaps/776\"\n    },\n    \"external_links\": {\n      \"href\": \"/api/ideas/133/external_links\"\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/ideas/:id",
              "version": "1",
              "example": "/api/ideas/149"
            }
          ]
        },
        {
          "description": "Updates the specified idea.",
          "name": "update",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd64a4360@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The idea's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 149,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "payload": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "name": {
                  "description": "Title of the idea.",
                  "example_definition": "#<Proc:0x007ffcd5dd7c08@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:28 (lambda)>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Gather Feedback"
                },
                "description": {
                  "description": "In-depth explanation of what the idea represents.",
                  "example_definition": "#<Proc:0x007ffcd5dd7870@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:33>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Reach out to customers and gather their feedback on specific questions and open dialog."
                },
                "strategic_value": {
                  "description": "Describe why this is important.",
                  "example_definition": "#<Proc:0x007ffcd5dd74d8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:44>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Makes our customers happy, leading to increased retention."
                },
                "percent_done": {
                  "description": "Determines the shading of the bar to indicate progress. Null is fully saturated. 0-100 displays a gradual shading until fully saturated.",
                  "options": {
                    "min": 0,
                    "max": 100
                  },
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 78
                },
                "effort": {
                  "description": "Displays on the bar to indicate the amount of effort needed to complete.",
                  "options": {
                    "min": 0,
                    "max": 10
                  },
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 5
                },
                "notes": {
                  "description": "Additional information to be shared.",
                  "example_definition": "#<Proc:0x007ffcd5dd7140@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:55>",
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Surveys, interviews, including interactive usability meetings."
                },
                "tags": {
                  "description": "Keywords and terms associated with the idea.",
                  "example_definition": "#<Proc:0x007ffcd5dd64c0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:78>",
                  "type": {
                    "name": "Collection",
                    "family": "array",
                    "id": null,
                    "options": {
                    },
                    "member_attribute": {
                      "type": {
                        "name": "String",
                        "family": "string",
                        "id": "Attributor-String"
                      },
                      "example": "Surveys"
                    }
                  },
                  "example": [
                    "Surveys",
                    "Interviews",
                    "Customer Success"
                  ]
                },
                "fields": {
                  "description": "The selected value for each custom field.  `{ roadmap.custom_fields[n].key => value }`",
                  "example_definition": "#<Proc:0x007ffcd5dd5de0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:89 (lambda)>",
                  "options": {
                    "allow_extra": false
                  },
                  "type": {
                    "name": "Hash",
                    "family": "hash",
                    "id": null,
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    },
                    "value": {
                      "type": {
                        "name": "Object",
                        "family": "any",
                        "id": "Attributor-Object"
                      }
                    }
                  },
                  "example": {
                    "pp_legend": "Goal 1",
                    "pp_lanes": "Lane 2"
                  }
                }
              },
              "requirements": [

              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"name\": \"Gather Feedback\",\n  \"description\": \"Reach out to customers and gather their feedback on specific questions and open dialog.\",\n  \"strategic_value\": \"Makes our customers happy, leading to increased retention.\",\n  \"percent_done\": 78,\n  \"effort\": 5,\n  \"notes\": \"Surveys, interviews, including interactive usability meetings.\",\n  \"tags\": [\n    \"Surveys\",\n    \"Interviews\",\n    \"Customer Success\"\n  ],\n  \"fields\": {\n    \"pp_legend\": \"Goal 1\",\n    \"pp_lanes\": \"Lane 2\"\n  }\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "name=Gather+Feedback&description=Reach+out+to+customers+and+gather+their+feedback+on+specific+questions+and+open+dialog.&strategic_value=Makes+our+customers+happy%2C+leading+to+increased+retention.&percent_done=78&effort=5&notes=Surveys%2C+interviews%2C+including+interactive+usability+meetings.&tags=Surveys&tags=Interviews&tags=Customer+Success&fields=%7B%3App_legend%3D%3E%22Goal+1%22%2C+%3App_lanes%3D%3E%22Lane+2%22%7D"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "PATCH",
              "path": "/api/ideas/:id",
              "version": "1",
              "example": "/api/ideas/149"
            }
          ]
        },
        {
          "description": "Deletes the specified idea.",
          "name": "destroy",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd92a7938@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The idea's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 149,
                  "source": "url"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "no_content": {
              "description": "The server successfully processed the request, but is not returning any content.",
              "status": 204,
              "headers": {
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "DELETE",
              "path": "/api/ideas/:id",
              "version": "1",
              "example": "/api/ideas/149"
            }
          ]
        },
        {
          "description": "Returns all external links for the specified idea.",
          "name": "external_links",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd927d3b8@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 98f2eaeb3c09367bd6e3e69c434c3fcb2a48b6b764048f1eea6595681be108b0"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Idea"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "id": {
                  "description": "The idea's unique database identifier.",
                  "required": true,
                  "type": {
                    "name": "Integer",
                    "family": "numeric",
                    "id": "Attributor-Integer"
                  },
                  "example": 149,
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the external links. If the view param is not specified or does not exist, the external links will be rendered with the :default view.",
                  "values": [
                    "default",
                    "link"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "link",
                  "source": "query"
                },
                "fields": {
                  "example_definition": "type,uri",
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "type,uri",
                  "source": "query"
                },
                "filters": {
                  "type": {
                    "name": "Extensions::Types::FilteringParams",
                    "family": "string",
                    "id": "Extensions-Types-FilteringParams",
                    "filters": {
                      "type": {
                        "operators": [
                          "=",
                          "!="
                        ]
                      },
                      "name": {
                        "operators": [
                          "=",
                          "!="
                        ],
                        "fuzzy": true
                      }
                    }
                  },
                  "example": "type!=jira&name=User Test Cases",
                  "source": "query"
                },
                "pagination": {
                  "type": {
                    "name": "Extensions::Types::PaginationParams",
                    "family": "string",
                    "id": "Extensions-Types-PaginationParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "max_items": 1000,
                    "page_size": 500,
                    "default_mode": {
                      "by": "id"
                    }
                  },
                  "example": "by=name,from=Current+Documentation,items=500",
                  "source": "query"
                },
                "order": {
                  "type": {
                    "name": "Extensions::Types::OrderingParams",
                    "family": "string",
                    "id": "Extensions-Types-OrderingParams",
                    "fields_allowed": [
                      "id",
                      "name"
                    ],
                    "enforced_for": "first"
                  },
                  "example": "id,name",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "id"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "unprocessable_entity": {
              "description": "The request was well-formed but was unable to be followed due to semantic errors.",
              "status": 422,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::ExternalLink::Collection",
                "family": "array",
                "id": "V1-MediaTypes-ExternalLink-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::ExternalLink"
                  },
                  "type": {
                    "name": "V1::MediaTypes::ExternalLink",
                    "family": "hash",
                    "id": "V1-MediaTypes-ExternalLink",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.external_link+json; type=collection",
                    "body": "[\n  {\n    \"href\": \"/api/external_links/542\",\n    \"id\": 542,\n    \"type\": \"web\",\n    \"name\": \"Support Docs\",\n    \"uri\": \"http://www.acme.com/support/9876\",\n    \"links\": {\n      \"bar\": {\n        \"href\": \"/api/bars/294\"\n      }\n    }\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/ideas/:id/external_links",
              "version": "1",
              "example": "/api/ideas/149/external_links"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::Ideas",
      "display_name": "Ideas",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-Jobs": {
      "description": "Jobs perform an action in the background and are processed asynchronously.\nThe user who scheduled the job may review the status of the job’s ‘state’ and when completed, the ‘outcome’.\n\n<strong>Note:</strong> The only job currently supported by the API is the\n<a href=\"#/1/controller/V1-Endpoints-Ideas/import\">Ideas#import</a> endpoint.\n",
      "media_type": {
        "name": "V1::MediaTypes::Job",
        "family": "hash",
        "id": "V1-MediaTypes-Job",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Returns meta and status information about the specified job.\n\n<strong>Note:</strong> The only job currently supported by the API is the\n<a href=\"#/1/controller/V1-Endpoints-Ideas/import\">Ideas#import</a> endpoint.\n",
          "name": "show",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::Job"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd65c2a30@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 69125d9106fa6ca184bed9d622341638cd042901cfd4b9ca325380635f20caab"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 69125d9106fa6ca184bed9d622341638cd042901cfd4b9ca325380635f20caab"
            }
          },
          "params": {
            "required": true,
            "options": {
              "reference": "V1::MediaTypes::Job"
            },
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "uuid": {
                  "description": "The job's unique identifier.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd5deb7f8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/job.rb:30>",
                  "options": {
                    "regexp": "(?-mix:^[0-9A-Fa-f]{32}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "43dfb84e1332ea5e3f0deabeeb04ceaf",
                  "source": "url"
                },
                "view": {
                  "description": "View name with which to render the idea. If the view param is not specified or does not exist, the idea will be rendered with the :default view.",
                  "values": [
                    "default"
                  ],
                  "default": "default",
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  },
                  "example": "default",
                  "source": "query"
                },
                "fields": {
                  "type": {
                    "name": "Praxis::Extensions::FieldSelection::FieldSelector",
                    "family": "string",
                    "id": null
                  },
                  "example": "href,uuid,outcome",
                  "source": "query"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "uuid"
                  ]
                }
              ]
            },
            "example": ""
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "resource_not_found": {
              "description": "The requested API resource could not be found for the provided :id",
              "status": 404,
              "headers": {
              }
            },
            "forbidden": {
              "description": "The request was a valid request, but the server is refusing to respond to it.",
              "status": 403,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::Job",
                "family": "hash",
                "id": "V1-MediaTypes-Job",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.job+json",
                    "body": "{\n  \"href\": \"/api/jobs/43dfb84e1332ea5e3f0deabeeb04ceaf\",\n  \"uuid\": \"43dfb84e1332ea5e3f0deabeeb04ceaf\",\n  \"owner_id\": 989,\n  \"percent_complete\": 100,\n  \"state\": \"done\",\n  \"outcome\": \"success\",\n  \"message\": \"Importing 3 of 3 items\",\n  \"data\": {\n    \"roadmap\": {\n      \"href\": \"/api/roadmaps/77\"\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/jobs/:uuid",
              "version": "1",
              "example": "/api/jobs/43dfb84e1332ea5e3f0deabeeb04ceaf"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::Jobs",
      "display_name": "Jobs",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-Privileges": {
      "description": "TBD...\n",
      "actions": [
        {
          "description": "Returns the user privileges on a set of API resources",
          "name": "search",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd9348450@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 4cc875ad425347e72c891416a0e2ddf932591d1e97384ecfd24e2a09667979de"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 4cc875ad425347e72c891416a0e2ddf932591d1e97384ecfd24e2a09667979de"
            }
          },
          "payload": {
            "required": true,
            "type": {
              "name": "Struct",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                }
              },
              "attributes": {
                "items": {
                  "type": {
                    "name": "Collection",
                    "family": "array",
                    "id": null,
                    "options": {
                    },
                    "member_attribute": {
                      "type": {
                        "name": "URI",
                        "family": "string",
                        "id": "Attributor-URI"
                      },
                      "example": "http://example.com/postdiastolic/669819096"
                    }
                  },
                  "example": [
                    "http://example.com/postdiastolic/669819096",
                    "http://example.com/assart/701002063"
                  ]
                }
              },
              "requirements": [

              ]
            },
            "examples": {
              "json": {
                "content_type": "application/json",
                "body": "{\n  \"items\": [\n    \"http://example.com/postdiastolic/669819096\",\n    \"http://example.com/assart/701002063\"\n  ]\n}"
              },
              "x-www-form-urlencoded": {
                "content_type": "application/x-www-form-urlencoded",
                "body": "items=http%3A%2F%2Fexample.com%2Fpostdiastolic%2F669819096&items=http%3A%2F%2Fexample.com%2Fassart%2F701002063"
              }
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::PrivilegeSet::Collection",
                "family": "array",
                "id": "V1-MediaTypes-PrivilegeSet-Collection",
                "anonymous": true,
                "options": {
                },
                "member_attribute": {
                  "options": {
                    "reference": "V1::MediaTypes::PrivilegeSet"
                  },
                  "type": {
                    "name": "V1::MediaTypes::PrivilegeSet",
                    "family": "hash",
                    "id": "V1-MediaTypes-PrivilegeSet",
                    "key": {
                      "type": {
                        "name": "Symbol",
                        "family": "string",
                        "id": "Attributor-Symbol"
                      }
                    }
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/vnd.productplan.privilege_search_results+json; type=collection",
                    "body": "[\n  {\n    \"target_href\": \"http://example.com/unwarping/901140680\",\n    \"privileges\": [\n      \"toxitabellae\",\n      \"perscrutate\",\n      \"Wilton\"\n    ]\n  }\n]"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "POST",
              "path": "/api/privileges/actions/search",
              "version": "1",
              "example": "/api/privileges/actions/search"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::Privileges",
      "display_name": "Privileges",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    },
    "V1-Endpoints-Status": {
      "description": "The status index provides a simple <i>ping</i> to let you know if the application is up and running.",
      "media_type": {
        "name": "V1::MediaTypes::ApplicationStatus",
        "family": "hash",
        "id": "V1-MediaTypes-ApplicationStatus",
        "key": {
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          }
        }
      },
      "actions": [
        {
          "description": "Returns the current application status.",
          "name": "index",
          "metadata": {
          },
          "headers": {
            "required": true,
            "options": {
              "allow_extra": false,
              "case_insensitive_load": true,
              "reference": "V1::MediaTypes::ApplicationStatus"
            },
            "type": {
              "name": "Hash",
              "family": "hash",
              "id": null,
              "key": {
                "type": {
                  "name": "String",
                  "family": "string",
                  "id": "Attributor-String"
                }
              },
              "attributes": {
                "Authorization": {
                  "description": "Required to access all API resources.",
                  "required": true,
                  "example_definition": "#<Proc:0x007ffcd9331228@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
                  "options": {
                    "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
                  },
                  "type": {
                    "name": "String",
                    "family": "string",
                    "id": "Attributor-String"
                  },
                  "example": "Bearer 6918275eec86eea1f2d50ef30f2fd14acbe7d5337d668698089df563ba6e9bda"
                }
              },
              "requirements": [
                {
                  "type": "all",
                  "attributes": [
                    "Authorization"
                  ]
                }
              ]
            },
            "example": {
              "Authorization": "Bearer 6918275eec86eea1f2d50ef30f2fd14acbe7d5337d668698089df563ba6e9bda"
            }
          },
          "responses": {
            "unauthorized": {
              "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.",
              "status": 401,
              "headers": {
              }
            },
            "ok": {
              "description": "Standard response for successful HTTP requests.",
              "status": 200,
              "headers": {
              },
              "payload": {
                "name": "V1::MediaTypes::ApplicationStatus",
                "family": "hash",
                "id": "V1-MediaTypes-ApplicationStatus",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                },
                "examples": {
                  "json": {
                    "content_type": "application/json",
                    "body": "{\n  \"href\": \"/api/status\",\n  \"application\": \"ProductPlan API\",\n  \"version\": 1,\n  \"status\": {\n    \"application\": \"up\",\n    \"database\": \"down\"\n  }\n}"
                  }
                }
              }
            }
          },
          "traits": [
            "authenticated"
          ],
          "urls": [
            {
              "verb": "GET",
              "path": "/api/status",
              "version": "1",
              "example": "/api/status"
            }
          ]
        }
      ],
      "name": "V1::Endpoints::Status",
      "display_name": "Status",
      "metadata": {
      },
      "traits": [
        "authenticated"
      ]
    }
  },
  "schemas": {
    "V1-MediaTypes-Annotation": {
      "name": "V1::MediaTypes::Annotation",
      "family": "hash",
      "id": "V1-MediaTypes-Annotation",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "example_definition": "#<Proc:0x007ffcd934bce0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/annotation.rb:13 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/annotations/782"
        },
        "id": {
          "description": "The annotation's unique database identifier.",
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 762
        },
        "target_href": {
          "description": "API href of the resource the association is attached to",
          "example_definition": "#<Proc:0x007ffcd934b628@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/annotation.rb:22 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/roadmaps/466"
        },
        "key": {
          "description": "The key that identifies the annotation data",
          "values": [
            "pp_timeline_renderer"
          ],
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          },
          "example": "pp_timeline_renderer"
        },
        "value": {
          "description": "The associated value of the annotation",
          "example_definition": "{\"some\": \"JSON\", \"value\": \"perhaps\"}",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "{\"some\": \"JSON\", \"value\": \"perhaps\"}"
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "id": {
            },
            "target_href": {
            },
            "key": {
            },
            "value": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/annotations/782",
            "id": 762,
            "target_href": "/api/roadmaps/466",
            "key": "pp_timeline_renderer",
            "value": "{\"some\": \"JSON\", \"value\": \"perhaps\"}"
          }
        },
        "link": {
          "attributes": {
            "href": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/annotations/782"
          }
        }
      },
      "identifier": "application/vnd.productplan.annotation",
      "description": "A bag of unstructured information that is attached to a given target resource.\n",
      "display_name": "Annotation",
      "example": {
        "href": "/api/annotations/782",
        "id": 762,
        "target_href": "/api/roadmaps/466",
        "key": "pp_timeline_renderer",
        "value": "{\"some\": \"JSON\", \"value\": \"perhaps\"}"
      }
    },
    "V1-MediaTypes-Bar": {
      "name": "V1::MediaTypes::Bar",
      "family": "hash",
      "id": "V1-MediaTypes-Bar",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "description": "API path to the bar.",
          "example_definition": "#<Proc:0x007ffcd587b2c8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:16 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/bars/529"
        },
        "id": {
          "description": "The bar's unique database identifier.",
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 529
        },
        "roadmap": {
          "description": "Related roadmap resource, to which the bar belongs.",
          "options": {
            "reference": "V1::MediaTypes::Roadmap"
          },
          "type": {
            "name": "V1::MediaTypes::Roadmap",
            "family": "hash",
            "id": "V1-MediaTypes-Roadmap",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            }
          }
        },
        "name": {
          "description": "Title of the bar.",
          "example_definition": "#<Proc:0x007ffcd587a5d0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:29 (lambda)>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Design"
        },
        "start_date": {
          "description": "Date for which work associated with the bar is to begin.",
          "type": {
            "name": "Date",
            "family": "temporal",
            "id": "Attributor-Date"
          },
          "example": "2012-12-03T00:00:00+00:00"
        },
        "end_date": {
          "description": "Date for which work associated with the bar is to end.",
          "type": {
            "name": "Date",
            "family": "temporal",
            "id": "Attributor-Date"
          },
          "example": "2013-07-23T00:00:00+00:00"
        },
        "description": {
          "description": "In-depth explanation of what the bar represents.",
          "example_definition": "#<Proc:0x007ffcd58795b8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:42>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Implement and review the design and produce documentation."
        },
        "strategic_value": {
          "description": "Describe why this is important.",
          "example_definition": "#<Proc:0x007ffcd58790e0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:53>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Upfront design and documentation leads to a better product."
        },
        "notes": {
          "description": "Additional information to be shared.",
          "example_definition": "#<Proc:0x007ffcd5878be0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:64>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Rapid prototyping can also help for the UI components."
        },
        "percent_done": {
          "description": "Determines the shading of the bar to indicate progress. Null is fully saturated. 0-100 displays a gradual shading until fully saturated.",
          "options": {
            "min": 0,
            "max": 100
          },
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 7
        },
        "effort": {
          "description": "Displays on the bar to indicate the amount of effort needed to complete.",
          "options": {
            "min": 0,
            "max": 10
          },
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 10
        },
        "tags": {
          "description": "Keywords and terms associated with the bar.",
          "example_definition": "#<Proc:0x007ffcd932f950@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:87>",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "type": {
                "name": "String",
                "family": "string",
                "id": "Attributor-String"
              },
              "example": "Design Reviews"
            }
          },
          "example": [
            "Design Reviews",
            "Documentation",
            "Prototype"
          ]
        },
        "fields": {
          "description": "The selected value for each custom field.  `{ roadmap.custom_fields[n].key => value }`",
          "example_definition": "#<Proc:0x007ffcd932f270@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:98 (lambda)>",
          "options": {
            "allow_extra": false
          },
          "type": {
            "name": "Hash",
            "family": "hash",
            "id": null,
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "value": {
              "type": {
                "name": "Object",
                "family": "any",
                "id": "Attributor-Object"
              }
            }
          },
          "example": {
            "pp_legend": "Goal 1",
            "pp_lanes": "Lane 2"
          }
        },
        "external_links": {
          "description": "The collection of linked resources external to the bar.",
          "example_definition": "#<Proc:0x007ffcd932ed70@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/bar.rb:103>",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "options": {
                "reference": "V1::MediaTypes::ExternalLink"
              },
              "type": {
                "name": "V1::MediaTypes::ExternalLink",
                "family": "hash",
                "id": "V1-MediaTypes-ExternalLink",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                }
              }
            }
          },
          "example": [
            {
              "href": "/api/external_links/916",
              "id": 916,
              "type": "jira",
              "name": "User Test Cases",
              "uri": "https://acme.atlassian.net/browse/UTC-27",
              "links": {
                "bar": {
                  "href": "/api/bars/529"
                }
              }
            }
          ]
        },
        "parent_bar": {
          "description": "Container of the bar.",
          "options": {
            "reference": "V1::MediaTypes::Bar"
          },
          "type": {
            "name": "V1::MediaTypes::Bar",
            "family": "hash",
            "id": "V1-MediaTypes-Bar",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            }
          }
        },
        "child_bars": {
          "description": "The collection of bars contained by the bar.",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "options": {
                "reference": "V1::MediaTypes::Bar"
              },
              "type": {
                "name": "V1::MediaTypes::Bar",
                "family": "hash",
                "id": "V1-MediaTypes-Bar",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                }
              }
            }
          }
        },
        "timestamps": {
          "description": "Read-only metadata timestamps for the bar.",
          "type": {
            "name": "Struct",
            "family": "hash",
            "id": null,
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "created_at": {
                "description": "Date and time the bar was first created.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2014-10-19T00:00:00+00:00"
              },
              "updated_at": {
                "description": "Date and time the bar was last updated.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2013-01-22T00:00:00+00:00"
              }
            },
            "requirements": [

            ]
          }
        },
        "links": {
          "options": {
            "reference": "V1::MediaTypes::Bar"
          },
          "type": {
            "name": "V1::MediaTypes::Bar::Links",
            "family": "hash",
            "id": "V1-MediaTypes-Bar-Links",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "roadmap": {
                "description": "API href to the bar's roadmap.",
                "options": {
                  "reference": "V1::MediaTypes::Roadmap"
                },
                "type": {
                  "name": "V1::MediaTypes::Roadmap",
                  "family": "hash",
                  "id": "V1-MediaTypes-Roadmap",
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  }
                }
              },
              "parent_bar": {
                "description": "API href to the bar's parent bar (container).",
                "options": {
                  "reference": "V1::MediaTypes::Bar"
                },
                "type": {
                  "name": "V1::MediaTypes::Bar",
                  "family": "hash",
                  "id": "V1-MediaTypes-Bar",
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  }
                }
              },
              "child_bars": {
                "description": "A hash containing the API href for all of the bar's child bars.",
                "options": {
                  "reference": null
                },
                "type": {
                  "name": "Struct",
                  "family": "hash",
                  "id": null,
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  },
                  "attributes": {
                    "href": {
                      "example_definition": "/api/bars/529/child_bars",
                      "type": {
                        "name": "URI",
                        "family": "string",
                        "id": "Attributor-URI"
                      },
                      "example": "/api/bars/529/child_bars"
                    }
                  },
                  "requirements": [

                  ]
                }
              },
              "external_links": {
                "description": "A hash containing the API href for all of the bar's external links.",
                "options": {
                  "reference": null
                },
                "type": {
                  "name": "Struct",
                  "family": "hash",
                  "id": null,
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  },
                  "attributes": {
                    "href": {
                      "example_definition": "/api/bars/529/external_links",
                      "type": {
                        "name": "URI",
                        "family": "string",
                        "id": "Attributor-URI"
                      },
                      "example": "/api/bars/529/external_links"
                    }
                  },
                  "requirements": [

                  ]
                }
              }
            },
            "requirements": [

            ],
            "anonymous": true,
            "views": {
              "master": {
                "attributes": {
                  "roadmap": {
                    "view": "link"
                  },
                  "parent_bar": {
                    "view": "link"
                  },
                  "child_bars": {
                  },
                  "external_links": {
                  }
                },
                "type": "standard"
              },
              "default": {
                "attributes": {
                  "roadmap": {
                    "view": "link"
                  },
                  "parent_bar": {
                    "view": "link"
                  },
                  "child_bars": {
                  },
                  "external_links": {
                  }
                },
                "type": "standard"
              }
            }
          }
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "id": {
            },
            "name": {
            },
            "start_date": {
            },
            "end_date": {
            },
            "description": {
            },
            "strategic_value": {
            },
            "notes": {
            },
            "percent_done": {
            },
            "effort": {
            },
            "tags": {
            },
            "fields": {
            },
            "timestamps": {
            },
            "links": {
              "view": "default"
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/bars/529",
            "id": 529,
            "name": "Design",
            "start_date": "2012-12-03T00:00:00+00:00",
            "end_date": "2013-07-23T00:00:00+00:00",
            "description": "Implement and review the design and produce documentation.",
            "strategic_value": "Upfront design and documentation leads to a better product.",
            "notes": "Rapid prototyping can also help for the UI components.",
            "percent_done": 7,
            "effort": 10,
            "tags": [
              "Design Reviews",
              "Documentation",
              "Prototype"
            ],
            "fields": {
              "pp_legend": "Goal 1",
              "pp_lanes": "Lane 2"
            },
            "timestamps": {
              "created_at": "2014-10-19T00:00:00+00:00",
              "updated_at": "2013-01-22T00:00:00+00:00"
            },
            "links": {
              "roadmap": {
                "href": "/api/roadmaps/155"
              },
              "parent_bar": {
                "href": "/api/bars/491"
              },
              "child_bars": {
                "href": "/api/bars/529/child_bars"
              },
              "external_links": {
                "href": "/api/bars/529/external_links"
              }
            }
          }
        },
        "link": {
          "attributes": {
            "href": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/bars/529"
          }
        }
      },
      "identifier": "application/vnd.productplan.bar",
      "description": "The schema for a bar/container consists of a set of predefined fields along with two that can be customized,\nwhich represent the Lane and Legend on the roadmap. The start and end dates cannot be modified using the API.\nYou may adjust those through the user interface.\n",
      "display_name": "Bar",
      "example": {
        "href": "/api/bars/529",
        "id": 529,
        "roadmap": {
          "href": "/api/roadmaps/155",
          "id": 155,
          "name": "Acme Services 5-yr Plan",
          "description": "Acme's roadmap detailing the 5-year feature rollout plan for the Services website.",
          "owner_email": "speaking@vasculose.example.org",
          "timestamps": {
            "created_at": "2014-04-07T00:00:00+00:00",
            "updated_at": "2014-12-15T00:00:00+00:00"
          },
          "links": {
            "bars": {
              "href": "/api/roadmaps/501/bars"
            },
            "ideas": {
              "href": "/api/roadmaps/501/ideas"
            },
            "custom_fields": {
              "href": "/api/roadmaps/501/custom_fields"
            }
          }
        },
        "name": "Design",
        "start_date": "2012-12-03T00:00:00+00:00",
        "end_date": "2013-07-23T00:00:00+00:00",
        "description": "Implement and review the design and produce documentation.",
        "strategic_value": "Upfront design and documentation leads to a better product.",
        "notes": "Rapid prototyping can also help for the UI components.",
        "percent_done": 7,
        "effort": 10,
        "tags": [
          "Design Reviews",
          "Documentation",
          "Prototype"
        ],
        "fields": {
          "pp_legend": "Goal 1",
          "pp_lanes": "Lane 2"
        },
        "external_links": [
          {
            "href": "/api/external_links/916",
            "id": 916,
            "type": "jira",
            "name": "User Test Cases",
            "uri": "https://acme.atlassian.net/browse/UTC-27",
            "links": {
              "bar": {
                "href": "/api/bars/529"
              }
            }
          }
        ],
        "parent_bar": {
          "href": "/api/bars/491",
          "id": 491,
          "name": "Design",
          "start_date": "2014-08-14T00:00:00+00:00",
          "end_date": "2013-07-10T00:00:00+00:00",
          "description": "Implement and review the design and produce documentation.",
          "strategic_value": "Upfront design and documentation leads to a better product.",
          "notes": "Rapid prototyping can also help for the UI components.",
          "percent_done": 22,
          "effort": 3,
          "tags": [
            "Design Reviews",
            "Documentation",
            "Prototype"
          ],
          "fields": {
            "pp_legend": "Goal 1",
            "pp_lanes": "Lane 2"
          },
          "timestamps": {
            "created_at": "2013-02-02T00:00:00+00:00",
            "updated_at": "2014-01-26T00:00:00+00:00"
          },
          "links": {
            "roadmap": {
              "href": "/api/roadmaps/27"
            },
            "parent_bar": {
              "href": "/api/bars/682"
            },
            "child_bars": {
              "href": "/api/bars/529/child_bars"
            },
            "external_links": {
              "href": "/api/bars/529/external_links"
            }
          }
        },
        "timestamps": {
          "created_at": "2014-10-19T00:00:00+00:00",
          "updated_at": "2013-01-22T00:00:00+00:00"
        },
        "links": {
          "roadmap": {
            "href": "/api/roadmaps/155"
          },
          "parent_bar": {
            "href": "/api/bars/491"
          },
          "child_bars": {
            "href": "/api/bars/529/child_bars"
          },
          "external_links": {
            "href": "/api/bars/529/external_links"
          }
        }
      }
    },
    "V1-MediaTypes-Roadmap": {
      "name": "V1::MediaTypes::Roadmap",
      "family": "hash",
      "id": "V1-MediaTypes-Roadmap",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "description": "API path to the roadmap.",
          "example_definition": "#<Proc:0x007ffcd34d1890@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/roadmap.rb:16 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/roadmaps/501"
        },
        "id": {
          "description": "The roadmap's unique database identifier.",
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 501
        },
        "name": {
          "description": "Title of the roadmap.",
          "example_definition": "Acme Services 5-yr Plan",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Acme Services 5-yr Plan"
        },
        "description": {
          "description": "In-depth explanation of what the roadmap represents.",
          "example_definition": "Acme's roadmap detailing the 5-year feature rollout plan for the Services website.",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Acme's roadmap detailing the 5-year feature rollout plan for the Services website."
        },
        "owner_email": {
          "description": "Email of the roadmap's current owner.",
          "example_definition": "#<Proc:0x007ffcd34d0260@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/roadmap.rb:35 (lambda)>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "candid@sheepnose.example.org"
        },
        "bars": {
          "description": "Bars belonging to the roadmap.",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "options": {
                "reference": "V1::MediaTypes::Bar"
              },
              "type": {
                "name": "V1::MediaTypes::Bar",
                "family": "hash",
                "id": "V1-MediaTypes-Bar",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                }
              }
            }
          }
        },
        "ideas": {
          "description": "Ideas belonging to the roadmap.",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "options": {
                "reference": "V1::MediaTypes::Idea"
              },
              "type": {
                "name": "V1::MediaTypes::Idea",
                "family": "hash",
                "id": "V1-MediaTypes-Idea",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                }
              }
            }
          }
        },
        "annotations": {
          "description": "Annotations attached to the roadmap.",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "options": {
                "reference": "V1::MediaTypes::Annotation"
              },
              "type": {
                "name": "V1::MediaTypes::Annotation",
                "family": "hash",
                "id": "V1-MediaTypes-Annotation",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                }
              }
            }
          }
        },
        "custom_fields": {
          "description": "Custom Fields for the bars in the roadmap.  Fields `:pp_legend` and `:pp_lanes` will always exist.",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "options": {
                "reference": "V1::MediaTypes::CustomField"
              },
              "type": {
                "name": "V1::MediaTypes::CustomField",
                "family": "hash",
                "id": "V1-MediaTypes-CustomField",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                }
              }
            }
          }
        },
        "timestamps": {
          "description": "Read-only metadata timestamps for the roadmap.",
          "type": {
            "name": "Struct",
            "family": "hash",
            "id": null,
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "created_at": {
                "description": "Date and time the roadmap was first created.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2012-10-30T00:00:00+00:00"
              },
              "updated_at": {
                "description": "Date and time the roadmap was last updated.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2013-07-31T00:00:00+00:00"
              }
            },
            "requirements": [

            ]
          }
        },
        "links": {
          "options": {
            "reference": "V1::MediaTypes::Roadmap"
          },
          "type": {
            "name": "V1::MediaTypes::Roadmap::Links",
            "family": "hash",
            "id": "V1-MediaTypes-Roadmap-Links",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "bars": {
                "description": "A hash containing the API href for all of the roadmap's bars.",
                "options": {
                  "reference": null
                },
                "type": {
                  "name": "Struct",
                  "family": "hash",
                  "id": null,
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  },
                  "attributes": {
                    "href": {
                      "example_definition": "/api/roadmaps/501/bars",
                      "type": {
                        "name": "URI",
                        "family": "string",
                        "id": "Attributor-URI"
                      },
                      "example": "/api/roadmaps/501/bars"
                    }
                  },
                  "requirements": [

                  ]
                }
              },
              "ideas": {
                "description": "A hash containing the API href for all of the roadmap's ideas.",
                "options": {
                  "reference": null
                },
                "type": {
                  "name": "Struct",
                  "family": "hash",
                  "id": null,
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  },
                  "attributes": {
                    "href": {
                      "example_definition": "/api/roadmaps/501/ideas",
                      "type": {
                        "name": "URI",
                        "family": "string",
                        "id": "Attributor-URI"
                      },
                      "example": "/api/roadmaps/501/ideas"
                    }
                  },
                  "requirements": [

                  ]
                }
              },
              "custom_fields": {
                "description": "A hash containing the API href for all of the roadmap's custom fields.",
                "options": {
                  "reference": null
                },
                "type": {
                  "name": "Struct",
                  "family": "hash",
                  "id": null,
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  },
                  "attributes": {
                    "href": {
                      "example_definition": "/api/roadmaps/501/custom_fields",
                      "type": {
                        "name": "URI",
                        "family": "string",
                        "id": "Attributor-URI"
                      },
                      "example": "/api/roadmaps/501/custom_fields"
                    }
                  },
                  "requirements": [

                  ]
                }
              }
            },
            "requirements": [

            ],
            "anonymous": true,
            "views": {
              "master": {
                "attributes": {
                  "bars": {
                  },
                  "ideas": {
                  },
                  "custom_fields": {
                  }
                },
                "type": "standard"
              },
              "default": {
                "attributes": {
                  "bars": {
                  },
                  "ideas": {
                  },
                  "custom_fields": {
                  }
                },
                "type": "standard"
              }
            }
          }
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "id": {
            },
            "name": {
            },
            "description": {
            },
            "owner_email": {
            },
            "timestamps": {
            },
            "annotations": {
              "view": "default"
            },
            "links": {
              "view": "default"
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/roadmaps/501",
            "id": 501,
            "name": "Acme Services 5-yr Plan",
            "description": "Acme's roadmap detailing the 5-year feature rollout plan for the Services website.",
            "owner_email": "candid@sheepnose.example.org",
            "timestamps": {
              "created_at": "2012-10-30T00:00:00+00:00",
              "updated_at": "2013-07-31T00:00:00+00:00"
            },
            "links": {
              "bars": {
                "href": "/api/roadmaps/501/bars"
              },
              "ideas": {
                "href": "/api/roadmaps/501/ideas"
              },
              "custom_fields": {
                "href": "/api/roadmaps/501/custom_fields"
              }
            }
          }
        },
        "link": {
          "attributes": {
            "href": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/roadmaps/501"
          }
        }
      },
      "identifier": "application/vnd.productplan.roadmap",
      "description": "The schema for a roadmap consists of a set of predefined fields, including custom fields\nwhich defines data that can be set on individual bars and ideas.  Currently, the only supported custom\nfields are Lane and Legend.  Except for custom fields, roadmaps are currently read-only via the API.\n",
      "display_name": "Roadmap",
      "example": {
        "href": "/api/roadmaps/501",
        "id": 501,
        "name": "Acme Services 5-yr Plan",
        "description": "Acme's roadmap detailing the 5-year feature rollout plan for the Services website.",
        "owner_email": "candid@sheepnose.example.org",
        "timestamps": {
          "created_at": "2012-10-30T00:00:00+00:00",
          "updated_at": "2013-07-31T00:00:00+00:00"
        },
        "links": {
          "bars": {
            "href": "/api/roadmaps/501/bars"
          },
          "ideas": {
            "href": "/api/roadmaps/501/ideas"
          },
          "custom_fields": {
            "href": "/api/roadmaps/501/custom_fields"
          }
        }
      }
    },
    "V1-MediaTypes-CustomField": {
      "name": "V1::MediaTypes::CustomField",
      "family": "hash",
      "id": "V1-MediaTypes-CustomField",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "description": "API path to the custom field.",
          "example_definition": "#<Proc:0x007ffcd65e5440@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/custom_field.rb:15 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/roadmaps/661/custom_fields/873"
        },
        "id": {
          "description": "The custom field's unique database identifier.",
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 873
        },
        "roadmap": {
          "description": "Related roadmap resource to which the custom field belongs.",
          "options": {
            "reference": "V1::MediaTypes::Roadmap"
          },
          "type": {
            "name": "V1::MediaTypes::Roadmap",
            "family": "hash",
            "id": "V1-MediaTypes-Roadmap",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            }
          }
        },
        "key": {
          "description": "Unique identifier within the custom field's roadmap.",
          "values": [
            "pp_lanes",
            "pp_legend"
          ],
          "example_definition": "#<Proc:0x007ffcd65e4a90@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/custom_field.rb:29 (lambda)>",
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          },
          "example": "pp_legend"
        },
        "display_name": {
          "description": "Title of the custom field.",
          "example_definition": "#<Proc:0x007ffcd65e46f8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/custom_field.rb:34 (lambda)>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Priority"
        },
        "allowed_values": {
          "description": "Potential values to assign to a bar within the roadmap.",
          "example_definition": "#<Proc:0x007ffcd65e4158@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/custom_field.rb:48 (lambda)>",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "type": {
                "name": "String",
                "family": "string",
                "id": "Attributor-String"
              },
              "example": "High"
            }
          },
          "example": [
            "High",
            "Medium",
            "Low"
          ]
        },
        "timestamps": {
          "description": "Read-only metadata timestamps for the custom field.",
          "type": {
            "name": "Struct",
            "family": "hash",
            "id": null,
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "created_at": {
                "description": "Date and time the custom field was first created.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2014-01-25T00:00:00+00:00"
              },
              "updated_at": {
                "description": "Date and time the custom field was last updated.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2014-07-10T00:00:00+00:00"
              }
            },
            "requirements": [

            ]
          }
        },
        "links": {
          "options": {
            "reference": "V1::MediaTypes::CustomField"
          },
          "type": {
            "name": "V1::MediaTypes::CustomField::Links",
            "family": "hash",
            "id": "V1-MediaTypes-CustomField-Links",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "roadmap": {
                "description": "API href to the custom field's roadmap.",
                "options": {
                  "reference": "V1::MediaTypes::Roadmap"
                },
                "type": {
                  "name": "V1::MediaTypes::Roadmap",
                  "family": "hash",
                  "id": "V1-MediaTypes-Roadmap",
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  }
                }
              }
            },
            "requirements": [

            ],
            "anonymous": true,
            "views": {
              "master": {
                "attributes": {
                  "roadmap": {
                    "view": "link"
                  }
                },
                "type": "standard"
              },
              "default": {
                "attributes": {
                  "roadmap": {
                    "view": "link"
                  }
                },
                "type": "standard"
              }
            }
          }
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "id": {
            },
            "key": {
            },
            "display_name": {
            },
            "allowed_values": {
            },
            "timestamps": {
            },
            "links": {
              "view": "default"
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/roadmaps/661/custom_fields/873",
            "id": 873,
            "key": "pp_legend",
            "display_name": "Priority",
            "allowed_values": [
              "High",
              "Medium",
              "Low"
            ],
            "timestamps": {
              "created_at": "2014-01-25T00:00:00+00:00",
              "updated_at": "2014-07-10T00:00:00+00:00"
            },
            "links": {
              "roadmap": {
                "href": "/api/roadmaps/661"
              }
            }
          }
        },
        "link": {
          "attributes": {
            "href": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/roadmaps/661/custom_fields/873"
          }
        }
      },
      "identifier": "application/vnd.productplan.custom_field",
      "description": "The schema for custom fields provides a flexible system to attach unique information to a bar or idea.\nThere are currently two pre-defined options: Lane and Legend.\n",
      "display_name": "CustomField",
      "example": {
        "href": "/api/roadmaps/661/custom_fields/873",
        "id": 873,
        "roadmap": {
          "href": "/api/roadmaps/661",
          "id": 661,
          "name": "Acme Services 5-yr Plan",
          "description": "Acme's roadmap detailing the 5-year feature rollout plan for the Services website.",
          "owner_email": "caviya@unpointing.example.org",
          "timestamps": {
            "created_at": "2014-05-21T00:00:00+00:00",
            "updated_at": "2012-12-28T00:00:00+00:00"
          },
          "links": {
            "bars": {
              "href": "/api/roadmaps/501/bars"
            },
            "ideas": {
              "href": "/api/roadmaps/501/ideas"
            },
            "custom_fields": {
              "href": "/api/roadmaps/501/custom_fields"
            }
          }
        },
        "key": "pp_legend",
        "display_name": "Priority",
        "allowed_values": [
          "High",
          "Medium",
          "Low"
        ],
        "timestamps": {
          "created_at": "2014-01-25T00:00:00+00:00",
          "updated_at": "2014-07-10T00:00:00+00:00"
        },
        "links": {
          "roadmap": {
            "href": "/api/roadmaps/661"
          }
        }
      }
    },
    "V1-MediaTypes-ExternalLink": {
      "name": "V1::MediaTypes::ExternalLink",
      "family": "hash",
      "id": "V1-MediaTypes-ExternalLink",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "description": "API path to the external link.",
          "example_definition": "#<Proc:0x007ffcce92a748@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/external_link.rb:15 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/external_links/608"
        },
        "id": {
          "description": "The external link's unique database identifier.",
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 608
        },
        "idea": {
          "description": "Related idea resource, to which the external link belongs. An external link belongs to exactly one Idea *_or_* one Bar.",
          "options": {
            "reference": "V1::MediaTypes::Idea"
          },
          "type": {
            "name": "V1::MediaTypes::Idea",
            "family": "hash",
            "id": "V1-MediaTypes-Idea",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            }
          }
        },
        "bar": {
          "description": "Related bar resource, to which the external link belongs. An external link belongs to exactly one Idea *_or_* one Bar.",
          "options": {
            "reference": "V1::MediaTypes::Bar"
          },
          "type": {
            "name": "V1::MediaTypes::Bar",
            "family": "hash",
            "id": "V1-MediaTypes-Bar",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            }
          }
        },
        "type": {
          "description": "Type of the linked resource.",
          "values": [
            "web",
            "jira",
            "tracker"
          ],
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          },
          "example": "jira"
        },
        "name": {
          "description": "Title of the external link.",
          "example_definition": "#<Proc:0x007ffcce929708@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/external_link.rb:39>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "User Test Cases"
        },
        "uri": {
          "description": "HREF to the external resource.",
          "example_definition": "#<Proc:0x007ffcce929370@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/external_link.rb:53>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "https://acme.atlassian.net/browse/UTC-27"
        },
        "links": {
          "options": {
            "reference": "V1::MediaTypes::ExternalLink"
          },
          "type": {
            "name": "V1::MediaTypes::ExternalLink::Links",
            "family": "hash",
            "id": "V1-MediaTypes-ExternalLink-Links",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "idea": {
                "description": "API href to the external link's idea, if the link is associated with an idea.",
                "options": {
                  "reference": "V1::MediaTypes::Idea"
                },
                "type": {
                  "name": "V1::MediaTypes::Idea",
                  "family": "hash",
                  "id": "V1-MediaTypes-Idea",
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  }
                }
              },
              "bar": {
                "description": "API href to the external link's bar, if the link is associated with a bar.",
                "options": {
                  "reference": "V1::MediaTypes::Bar"
                },
                "type": {
                  "name": "V1::MediaTypes::Bar",
                  "family": "hash",
                  "id": "V1-MediaTypes-Bar",
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  }
                }
              }
            },
            "requirements": [

            ],
            "anonymous": true,
            "views": {
              "master": {
                "attributes": {
                  "idea": {
                    "view": "link"
                  },
                  "bar": {
                    "view": "link"
                  }
                },
                "type": "standard"
              },
              "default": {
                "attributes": {
                  "idea": {
                    "view": "link"
                  },
                  "bar": {
                    "view": "link"
                  }
                },
                "type": "standard"
              }
            }
          }
        }
      },
      "requirements": [
        {
          "type": "exactly",
          "attributes": [
            "bar",
            "idea"
          ],
          "count": 1
        },
        {
          "type": "exactly",
          "attributes": [
            "bar",
            "idea"
          ],
          "count": 1
        }
      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "id": {
            },
            "type": {
            },
            "name": {
            },
            "uri": {
            },
            "links": {
              "view": "default"
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/external_links/608",
            "id": 608,
            "type": "jira",
            "name": "User Test Cases",
            "uri": "https://acme.atlassian.net/browse/UTC-27",
            "links": {
              "bar": {
                "href": "/api/bars/825"
              }
            }
          }
        },
        "link": {
          "attributes": {
            "href": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/external_links/608"
          }
        }
      },
      "identifier": "application/vnd.productplan.external_link",
      "description": "The schema for an external link consists of a set of predefined fields,\nwhich allow you to specify URLs to be associated with a bar or idea.\n",
      "display_name": "ExternalLink",
      "example": {
        "href": "/api/external_links/608",
        "id": 608,
        "bar": {
          "href": "/api/bars/825",
          "id": 825,
          "name": "Gather Feedback",
          "start_date": "2014-06-29T00:00:00+00:00",
          "end_date": "2014-03-05T00:00:00+00:00",
          "description": "Reach out to customers and gather their feedback on specific questions and open dialog.",
          "strategic_value": "Makes our customers happy, leading to increased retention.",
          "notes": "Surveys, interviews, including interactive usability meetings.",
          "percent_done": 11,
          "effort": 5,
          "tags": [
            "Surveys",
            "Interviews",
            "Customer Success"
          ],
          "fields": {
            "pp_legend": "Goal 1",
            "pp_lanes": "Lane 2"
          },
          "timestamps": {
            "created_at": "2014-07-25T00:00:00+00:00",
            "updated_at": "2013-12-07T00:00:00+00:00"
          },
          "links": {
            "roadmap": {
              "href": "/api/roadmaps/656"
            },
            "parent_bar": {
              "href": "/api/bars/55"
            },
            "child_bars": {
              "href": "/api/bars/529/child_bars"
            },
            "external_links": {
              "href": "/api/bars/529/external_links"
            }
          }
        },
        "type": "jira",
        "name": "User Test Cases",
        "uri": "https://acme.atlassian.net/browse/UTC-27",
        "links": {
          "bar": {
            "href": "/api/bars/825"
          }
        }
      }
    },
    "V1-MediaTypes-Idea": {
      "name": "V1::MediaTypes::Idea",
      "family": "hash",
      "id": "V1-MediaTypes-Idea",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "description": "API path to the idea.",
          "example_definition": "#<Proc:0x007ffcd34e4af8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:15 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/ideas/133"
        },
        "id": {
          "description": "The idea's unique database identifier.",
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 133
        },
        "roadmap": {
          "description": "Related roadmap resource, to which the idea belongs.",
          "options": {
            "reference": "V1::MediaTypes::Roadmap"
          },
          "type": {
            "name": "V1::MediaTypes::Roadmap",
            "family": "hash",
            "id": "V1-MediaTypes-Roadmap",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            }
          }
        },
        "name": {
          "description": "Title of the idea.",
          "example_definition": "#<Proc:0x007ffcd5dd7c08@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:28 (lambda)>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Implementation"
        },
        "description": {
          "description": "In-depth explanation of what the idea represents.",
          "example_definition": "#<Proc:0x007ffcd5dd7870@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:33>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Implement and test the feature."
        },
        "strategic_value": {
          "description": "Describe why this is important.",
          "example_definition": "#<Proc:0x007ffcd5dd74d8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:44>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Test Driven Development leads to a better product."
        },
        "notes": {
          "description": "Additional information to be shared.",
          "example_definition": "#<Proc:0x007ffcd5dd7140@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:55>",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Consider using RoR with RSpec."
        },
        "percent_done": {
          "description": "Determines the shading of the bar to indicate progress. Null is fully saturated. 0-100 displays a gradual shading until fully saturated.",
          "options": {
            "min": 0,
            "max": 100
          },
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 39
        },
        "effort": {
          "description": "Displays on the bar to indicate the amount of effort needed to complete.",
          "options": {
            "min": 0,
            "max": 10
          },
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 3
        },
        "tags": {
          "description": "Keywords and terms associated with the idea.",
          "example_definition": "#<Proc:0x007ffcd5dd64c0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:78>",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "type": {
                "name": "String",
                "family": "string",
                "id": "Attributor-String"
              },
              "example": "Rails"
            }
          },
          "example": [
            "Rails",
            "RSpec",
            "Code Reviews"
          ]
        },
        "fields": {
          "description": "The selected value for each custom field.  `{ roadmap.custom_fields[n].key => value }`",
          "example_definition": "#<Proc:0x007ffcd5dd5de0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:89 (lambda)>",
          "options": {
            "allow_extra": false
          },
          "type": {
            "name": "Hash",
            "family": "hash",
            "id": null,
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "value": {
              "type": {
                "name": "Object",
                "family": "any",
                "id": "Attributor-Object"
              }
            }
          },
          "example": {
            "pp_legend": "Goal 1",
            "pp_lanes": "Lane 2"
          }
        },
        "external_links": {
          "description": "Linked resources external to the idea.",
          "example_definition": "#<Proc:0x007ffcd5dd58e0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/idea.rb:94>",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "options": {
                "reference": "V1::MediaTypes::ExternalLink"
              },
              "type": {
                "name": "V1::MediaTypes::ExternalLink",
                "family": "hash",
                "id": "V1-MediaTypes-ExternalLink",
                "key": {
                  "type": {
                    "name": "Symbol",
                    "family": "string",
                    "id": "Attributor-Symbol"
                  }
                }
              }
            }
          },
          "example": [
            {
              "href": "/api/external_links/45",
              "id": 45,
              "type": "tracker",
              "name": "Super Cool Feature",
              "uri": "https://www.pivotaltracker.com/story/show/141128831",
              "links": {
                "idea": {
                  "href": "/api/ideas/133"
                }
              }
            }
          ]
        },
        "timestamps": {
          "description": "Read-only metadata timestamps for the idea.",
          "type": {
            "name": "Struct",
            "family": "hash",
            "id": null,
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "created_at": {
                "description": "Date and time the idea was first created.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2014-01-14T00:00:00+00:00"
              },
              "updated_at": {
                "description": "Date and time the idea was last updated.",
                "type": {
                  "name": "DateTime",
                  "family": "temporal",
                  "id": "Attributor-DateTime"
                },
                "example": "2014-09-03T00:00:00+00:00"
              }
            },
            "requirements": [

            ]
          }
        },
        "links": {
          "options": {
            "reference": "V1::MediaTypes::Idea"
          },
          "type": {
            "name": "V1::MediaTypes::Idea::Links",
            "family": "hash",
            "id": "V1-MediaTypes-Idea-Links",
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "roadmap": {
                "description": "API href to the idea's roadmap.",
                "options": {
                  "reference": "V1::MediaTypes::Roadmap"
                },
                "type": {
                  "name": "V1::MediaTypes::Roadmap",
                  "family": "hash",
                  "id": "V1-MediaTypes-Roadmap",
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  }
                }
              },
              "external_links": {
                "description": "A hash containing the API href for all of the bar's external links.",
                "options": {
                  "reference": null
                },
                "type": {
                  "name": "Struct",
                  "family": "hash",
                  "id": null,
                  "key": {
                    "type": {
                      "name": "Symbol",
                      "family": "string",
                      "id": "Attributor-Symbol"
                    }
                  },
                  "attributes": {
                    "href": {
                      "example_definition": "/api/ideas/133/external_links",
                      "type": {
                        "name": "URI",
                        "family": "string",
                        "id": "Attributor-URI"
                      },
                      "example": "/api/ideas/133/external_links"
                    }
                  },
                  "requirements": [

                  ]
                }
              }
            },
            "requirements": [

            ],
            "anonymous": true,
            "views": {
              "master": {
                "attributes": {
                  "roadmap": {
                    "view": "link"
                  },
                  "external_links": {
                  }
                },
                "type": "standard"
              },
              "default": {
                "attributes": {
                  "roadmap": {
                    "view": "link"
                  },
                  "external_links": {
                  }
                },
                "type": "standard"
              }
            }
          }
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "id": {
            },
            "name": {
            },
            "description": {
            },
            "strategic_value": {
            },
            "notes": {
            },
            "percent_done": {
            },
            "effort": {
            },
            "tags": {
            },
            "fields": {
            },
            "timestamps": {
            },
            "links": {
              "view": "default"
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/ideas/133",
            "id": 133,
            "name": "Implementation",
            "description": "Implement and test the feature.",
            "strategic_value": "Test Driven Development leads to a better product.",
            "notes": "Consider using RoR with RSpec.",
            "percent_done": 39,
            "effort": 3,
            "tags": [
              "Rails",
              "RSpec",
              "Code Reviews"
            ],
            "fields": {
              "pp_legend": "Goal 1",
              "pp_lanes": "Lane 2"
            },
            "timestamps": {
              "created_at": "2014-01-14T00:00:00+00:00",
              "updated_at": "2014-09-03T00:00:00+00:00"
            },
            "links": {
              "roadmap": {
                "href": "/api/roadmaps/836"
              },
              "external_links": {
                "href": "/api/ideas/133/external_links"
              }
            }
          }
        },
        "link": {
          "attributes": {
            "href": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/ideas/133"
          }
        }
      },
      "identifier": "application/vnd.productplan.idea",
      "description": "The schema for an idea consists of a set of predefined fields along with two that can be customized,\nwhich represent the Lane and Legend on the roadmap.\n",
      "display_name": "Idea",
      "example": {
        "href": "/api/ideas/133",
        "id": 133,
        "roadmap": {
          "href": "/api/roadmaps/836",
          "id": 836,
          "name": "Acme Services 5-yr Plan",
          "description": "Acme's roadmap detailing the 5-year feature rollout plan for the Services website.",
          "owner_email": "interpenetratively@uninquisitive.example.org",
          "timestamps": {
            "created_at": "2014-08-05T00:00:00+00:00",
            "updated_at": "2014-03-30T00:00:00+00:00"
          },
          "links": {
            "bars": {
              "href": "/api/roadmaps/501/bars"
            },
            "ideas": {
              "href": "/api/roadmaps/501/ideas"
            },
            "custom_fields": {
              "href": "/api/roadmaps/501/custom_fields"
            }
          }
        },
        "name": "Implementation",
        "description": "Implement and test the feature.",
        "strategic_value": "Test Driven Development leads to a better product.",
        "notes": "Consider using RoR with RSpec.",
        "percent_done": 39,
        "effort": 3,
        "tags": [
          "Rails",
          "RSpec",
          "Code Reviews"
        ],
        "fields": {
          "pp_legend": "Goal 1",
          "pp_lanes": "Lane 2"
        },
        "external_links": [
          {
            "href": "/api/external_links/45",
            "id": 45,
            "type": "tracker",
            "name": "Super Cool Feature",
            "uri": "https://www.pivotaltracker.com/story/show/141128831",
            "links": {
              "idea": {
                "href": "/api/ideas/133"
              }
            }
          }
        ],
        "timestamps": {
          "created_at": "2014-01-14T00:00:00+00:00",
          "updated_at": "2014-09-03T00:00:00+00:00"
        },
        "links": {
          "roadmap": {
            "href": "/api/roadmaps/836"
          },
          "external_links": {
            "href": "/api/ideas/133/external_links"
          }
        }
      }
    },
    "V1-MediaTypes-Job": {
      "name": "V1::MediaTypes::Job",
      "family": "hash",
      "id": "V1-MediaTypes-Job",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "description": "API path to the job's status.",
          "example_definition": "#<Proc:0x007ffcd5debaf0@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/job.rb:24 (lambda)>",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/jobs/c4f9b3ac0c684bc278679b66f023affe"
        },
        "uuid": {
          "description": "The job's unique identifier.",
          "example_definition": "#<Proc:0x007ffcd5deb7f8@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/job.rb:30>",
          "options": {
            "regexp": "(?-mix:^[0-9A-Fa-f]{32}$)"
          },
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "c4f9b3ac0c684bc278679b66f023affe"
        },
        "owner_id": {
          "description": "Unique database identifier of the user who initiated the job.",
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 366
        },
        "percent_complete": {
          "description": "The percent of total work completed.",
          "example_definition": 100,
          "options": {
            "min": 0,
            "max": 100
          },
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 100
        },
        "state": {
          "description": "The job's current state.",
          "values": [
            "in_progress",
            "done"
          ],
          "example_definition": "done",
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          },
          "example": "done"
        },
        "outcome": {
          "description": "The job's outcome if done.",
          "values": [
            "success",
            "error",
            "cancelled"
          ],
          "example_definition": "success",
          "type": {
            "name": "Symbol",
            "family": "string",
            "id": "Attributor-Symbol"
          },
          "example": "success"
        },
        "message": {
          "description": "Additional information about the job's current status",
          "example_definition": "Importing 3 of 3 items",
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "Importing 3 of 3 items"
        },
        "data": {
          "description": "Job-specific data.",
          "example_definition": "#<Proc:0x007ffcd5dea240@/Users/blanquer/dev/productplan/productplan/api/design/v1/media_types/job.rb:66 (lambda)>",
          "options": {
            "allow_extra": false
          },
          "type": {
            "name": "Hash",
            "family": "hash",
            "id": "Attributor-Hash",
            "key": {
              "type": {
                "name": "Object",
                "family": "any",
                "id": "Attributor-Object"
              }
            },
            "value": {
              "type": {
                "name": "Object",
                "family": "any",
                "id": "Attributor-Object"
              }
            }
          },
          "example": {
            "roadmap": {
              "href": "/api/roadmaps/77"
            }
          }
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "uuid": {
            },
            "owner_id": {
            },
            "percent_complete": {
            },
            "state": {
            },
            "outcome": {
            },
            "message": {
            },
            "data": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/jobs/c4f9b3ac0c684bc278679b66f023affe",
            "uuid": "c4f9b3ac0c684bc278679b66f023affe",
            "owner_id": 366,
            "percent_complete": 100,
            "state": "done",
            "outcome": "success",
            "message": "Importing 3 of 3 items",
            "data": {
              "roadmap": {
                "href": "/api/roadmaps/77"
              }
            }
          }
        }
      },
      "identifier": "application/vnd.productplan.job",
      "description": "The schema for a job consists of a set of predefined fields which detail meta data about the job.\nThis includes 'state', and if state == \"done\", the 'outcome'.\n\n<strong>Note:</strong> Currently, the only job created in and supported by the API is done so with the\n<a href=\"#/1/controller/V1-Endpoints-Ideas/import\">Ideas#import</a> endpoint.\n",
      "display_name": "Job",
      "example": {
        "href": "/api/jobs/c4f9b3ac0c684bc278679b66f023affe",
        "uuid": "c4f9b3ac0c684bc278679b66f023affe",
        "owner_id": 366,
        "percent_complete": 100,
        "state": "done",
        "outcome": "success",
        "message": "Importing 3 of 3 items",
        "data": {
          "roadmap": {
            "href": "/api/roadmaps/77"
          }
        }
      }
    },
    "V1-MediaTypes-ApplicationStatus": {
      "name": "V1::MediaTypes::ApplicationStatus",
      "family": "hash",
      "id": "V1-MediaTypes-ApplicationStatus",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "href": {
          "description": "API path to the application status.",
          "example_definition": "/api/status",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "/api/status"
        },
        "application": {
          "description": "The name of this application.",
          "values": [
            "ProductPlan API"
          ],
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          },
          "example": "ProductPlan API"
        },
        "version": {
          "description": "API Version",
          "values": [
            1
          ],
          "type": {
            "name": "Integer",
            "family": "numeric",
            "id": "Attributor-Integer"
          },
          "example": 1
        },
        "status": {
          "type": {
            "name": "Struct",
            "family": "hash",
            "id": null,
            "key": {
              "type": {
                "name": "Symbol",
                "family": "string",
                "id": "Attributor-Symbol"
              }
            },
            "attributes": {
              "application": {
                "description": "Current application state.  Always :up if a 404 or 500 is not returned.",
                "values": [
                  "up"
                ],
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                },
                "example": "up"
              },
              "database": {
                "description": "Current database state.",
                "values": [
                  "up",
                  "down"
                ],
                "type": {
                  "name": "Symbol",
                  "family": "string",
                  "id": "Attributor-Symbol"
                },
                "example": "up"
              }
            },
            "requirements": [

            ]
          }
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "href": {
            },
            "application": {
            },
            "version": {
            },
            "status": {
            }
          },
          "type": "standard",
          "example": {
            "href": "/api/status",
            "application": "ProductPlan API",
            "version": 1,
            "status": {
              "application": "up",
              "database": "up"
            }
          }
        }
      },
      "identifier": "application/json",
      "description": "The schema for application status provides meta data about the current application.",
      "display_name": "ApplicationStatus",
      "example": {
        "href": "/api/status",
        "application": "ProductPlan API",
        "version": 1,
        "status": {
          "application": "up",
          "database": "up"
        }
      }
    },
    "Extensions-Types-FilteringParams": {
      "name": "Extensions::Types::FilteringParams",
      "family": "string",
      "id": "Extensions-Types-FilteringParams",
      "example": "name=Joe&date>2017-01-01",
      "display_name": "Filtering"
    },
    "Extensions-Types-PaginationParams": {
      "name": "Extensions::Types::PaginationParams",
      "family": "string",
      "id": "Extensions-Types-PaginationParams",
      "example": "by=id,from=20,items=100",
      "display_name": "Paginator"
    },
    "Extensions-Types-OrderingParams": {
      "name": "Extensions::Types::OrderingParams",
      "family": "string",
      "id": "Extensions-Types-OrderingParams",
      "example": "name,last_name,-birth_date",
      "display_name": "Ordering"
    },
    "V1-MediaTypes-PrivilegeSet": {
      "name": "V1::MediaTypes::PrivilegeSet",
      "family": "hash",
      "id": "V1-MediaTypes-PrivilegeSet",
      "key": {
        "type": {
          "name": "Symbol",
          "family": "string",
          "id": "Attributor-Symbol"
        }
      },
      "attributes": {
        "target_href": {
          "description": "Resource href where the privileges are attached",
          "type": {
            "name": "URI",
            "family": "string",
            "id": "Attributor-URI"
          },
          "example": "http://example.com/zoomimetic/203873446"
        },
        "privileges": {
          "description": "Set privileges",
          "type": {
            "name": "Collection",
            "family": "array",
            "id": null,
            "options": {
            },
            "member_attribute": {
              "type": {
                "name": "String",
                "family": "string",
                "id": "Attributor-String"
              },
              "example": "taenioglossate"
            }
          },
          "example": [
            "taenioglossate"
          ]
        }
      },
      "requirements": [

      ],
      "views": {
        "default": {
          "attributes": {
            "target_href": {
            },
            "privileges": {
            }
          },
          "type": "standard",
          "example": {
            "target_href": "http://example.com/zoomimetic/203873446",
            "privileges": [
              "taenioglossate"
            ]
          }
        }
      },
      "identifier": "application/vnd.productplan.privilege_search_results",
      "description": "Description goes here...\n",
      "display_name": "PrivilegeSet",
      "example": {
        "target_href": "http://example.com/zoomimetic/203873446",
        "privileges": [
          "taenioglossate"
        ]
      }
    }
  },
  "traits": {
    "authenticated": {
      "description": "<div id=\"authentication_authorization\" class=\"h3_section\">\n  <br>\n  <h3>Authentication &amp; Authorization</h3>\n  <p>\n    Every request requires a <strong>Personal Access Token</strong>, or <i>API Token</i>, to authenticate.\n  </p>\n  <p>\n    This token will map to one specific ProductPlan user.  If your account has multipe users, make sure to choose a\n    user who has the appropriate authorization you will need in order to perform the tasks you require of the API.\n  </p>\n  <p>\n    In the ProductPlan application, navigate to <strong>Your Settings</strong> (click on your email address in the upper-right),\n    and then <strong>API Token</strong> (<a href=\"/user_settings/personal_token\" target=\"_blank\">direct link</a>).\n    Follow the instructions for generating the key.  Once the 64 character unique hash key is created and displayed,\n    copy it somewhere safe and use it for authentication to the API.\n  </p>\n  <p>\n    For example, if your generated token is \"0c8e87e3e4bb1c3f5c5acfbe7647e7651c31ac3114a67ee8512547e4fc416177\",\n    you would use it to authenticate like this:\n\n    <pre>Authorization: Bearer 0c8e87e3e4bb1c3f5c5acfbe7647e7651c31ac3114a67ee8512547e4fc416177</pre>\n\n    Please note that the word \"Bearer\" must be included in the value and that\n    there is one (and only one!) space between \"Bearer\" and the token.\n  </p>\n</div>\n",
      "headers": {
        "Authorization": {
          "description": "Required to access all API resources.",
          "required": true,
          "example_definition": "#<Proc:0x007ffcd9490498@/Users/blanquer/dev/productplan/productplan/api/design/api.rb:46>",
          "options": {
            "regexp": "(?-mix:^Bearer [0-9A-Fa-f]{64}$)"
          },
          "type": {
            "name": "String",
            "family": "string",
            "id": "Attributor-String"
          }
        }
      }
    }
  }
}