(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{133:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(i,".").concat(b)]||d[b]||u[b]||a;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},157:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/first-api-doc-browser-d44b4cd73f3a6637f3ea543799f53d48.png"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(133)),i={title:"Document Generation"},c={unversionedId:"reference/design/doc-generation",id:"reference/design/doc-generation",isDocsHomePage:!1,title:"Document Generation",description:"Praxis makes it easy to generate documentation for your app. To generate",source:"@site/docs/reference/design/doc-generation.md",slug:"/reference/design/doc-generation",permalink:"/docs/reference/design/doc-generation",version:"current",sidebar:"mainSidebar",previous:{title:"Traits",permalink:"/docs/reference/design/traits"},next:{title:"Multipart",permalink:"/docs/reference/design/multipart"}},s=[],l={toc:s};function p(e){var t=e.components,i=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,i,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Praxis makes it easy to generate documentation for your app. To generate\ndocumentation:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"create one or more ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"endpoint-definitions"}),"endpoint definitions")),Object(a.b)("li",{parentName:"ol"},"create one or more associated ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"media-types"}),"media types")),Object(a.b)("li",{parentName:"ol"},"generate OpenApi 3.x documentation!")),Object(a.b)("p",null,"There are 3 associated tasks with generating documentation:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"the most useful thing to do while developing and designing is to run ",Object(a.b)("inlineCode",{parentName:"li"},"praxis docs browser")," (or invoke the equivalent ",Object(a.b)("inlineCode",{parentName:"li"},"praxis:docs:browser")," rake task). This task will generate the OpenAPI docs under ",Object(a.b)("inlineCode",{parentName:"li"},"docs/openapi/*")," (in both yaml and json format) and then will open a browser window loading them for you to browse. The Embedded OpenApi browser we use is reDoc."),Object(a.b)("li",{parentName:"ul"},"the task that you might want to run in CI or when you're ready to release a new version of the code is ",Object(a.b)("inlineCode",{parentName:"li"},"praxis docs generate"),". It essentially only does all the OpenApi generation of documents, but won't open a UI browser."),Object(a.b)("li",{parentName:"ul"},"the third one is simply called ",Object(a.b)("inlineCode",{parentName:"li"},"praxis docs package")," which basically consists of invoking the generation, and then packaging all the files in to a single zip file, left at ",Object(a.b)("inlineCode",{parentName:"li"},"docs/openapi.zip"),". You can then easily copy and deflate this file behind a web server to host your docs.")),Object(a.b)("p",null,"If your application has multiple API versions, there will be a directory for each of them, and the document generator will create a very (and I mean, very) basic index.html in the root that can link to each of them. Feel free to bring your artistic design chops to make multiple API version documents easier to browse."),Object(a.b)("p",null,"Here's a very simple screenshot of how the document browser (i.e., reDoc) displays the generated documentation:"),Object(a.b)("p",null,Object(a.b)("img",{alt:"Document Browser",src:n(157).default})))}p.isMDXComponent=!0}}]);