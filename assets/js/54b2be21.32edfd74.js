"use strict";(self.webpackChunkpraxis_site=self.webpackChunkpraxis_site||[]).push([[2131],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={title:"Document Generation"},i=void 0,s={unversionedId:"reference/design/doc-generation",id:"reference/design/doc-generation",title:"Document Generation",description:"Praxis makes it easy to generate documentation for your app. To generate",source:"@site/docs/reference/design/doc-generation.md",sourceDirName:"reference/design",slug:"/reference/design/doc-generation",permalink:"/docs/reference/design/doc-generation",draft:!1,tags:[],version:"current",frontMatter:{title:"Document Generation"},sidebar:"mainSidebar",previous:{title:"Traits",permalink:"/docs/reference/design/traits"},next:{title:"Multipart",permalink:"/docs/reference/design/multipart"}},l={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(d,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Praxis makes it easy to generate documentation for your app. To generate\ndocumentation:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"create one or more ",(0,o.kt)("a",{parentName:"li",href:"endpoints"},"endpoints")),(0,o.kt)("li",{parentName:"ol"},"create one or more associated ",(0,o.kt)("a",{parentName:"li",href:"media-types"},"media types")),(0,o.kt)("li",{parentName:"ol"},"generate OpenApi 3.x documentation!")),(0,o.kt)("p",null,"There are 3 associated tasks with generating documentation:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the most useful thing to do while developing and designing is to run ",(0,o.kt)("inlineCode",{parentName:"li"},"bundle exec praxis docs browser")," (or invoke the equivalent ",(0,o.kt)("inlineCode",{parentName:"li"},"praxis:docs:browser")," rake task). This task will generate the OpenAPI docs under ",(0,o.kt)("inlineCode",{parentName:"li"},"docs/openapi/*")," (in both yaml and json format) and then will open a browser window loading them for you to browse. The Embedded OpenApi browser we use is reDoc."),(0,o.kt)("li",{parentName:"ul"},"the task that you might want to run in CI or when you're ready to release a new version of the code is ",(0,o.kt)("inlineCode",{parentName:"li"},"praxis docs generate"),". It essentially only does all the OpenApi generation of documents, but won't open a UI browser."),(0,o.kt)("li",{parentName:"ul"},"the third one is simply called ",(0,o.kt)("inlineCode",{parentName:"li"},"praxis docs package")," which basically consists of invoking the generation, and then packaging all the files in to a single zip file, left at ",(0,o.kt)("inlineCode",{parentName:"li"},"docs/openapi.zip"),". You can then easily copy and deflate this file behind a web server to host your docs.")),(0,o.kt)("p",null,"If your application has multiple API versions, there will be a directory for each of them, and the document generator will create a very (and I mean, very) basic index.html in the root that can link to each of them. Feel free to bring your artistic design chops to make multiple API version documents easier to browse."),(0,o.kt)("p",null,"Here's a very simple screenshot of how the document browser (i.e., reDoc) displays the generated documentation:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Document Browser",src:n(4787).Z,width:"1356",height:"1034"})))}u.isMDXComponent=!0},4787:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/first-api-doc-browser-cb7f9de90007e404a8a1253300dc2f4c.png"}}]);