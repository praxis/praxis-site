"use strict";(self.webpackChunkpraxis_site=self.webpackChunkpraxis_site||[]).push([[4195],{6795:(e,t,n)=>{n.r(t),n.d(t,{default:()=>_});var a=n(7294),l=n(6010),i=(n(9960),n(2263)),r=n(7961),s=n(7462);const o={features:"features_t9lD",featureSvg:"featureSvg_GfXr",featureIconBorder:"featureIconBorder_wUP1",featureIcon:"featureIcon_GA8l"};var c=n(7814);const m=[{title:"Truthful & Beautiful Docs",icon:"fa fa-book-open",description:a.createElement(a.Fragment,null,"Automatically generate Open API 3.x documents from the actual functioning code, and rest assured they're always correct.")},{title:"GraphQL Flexibility, REST Simplicity",icon:"fa fa-lightbulb",description:a.createElement(a.Fragment,null,"Allow customers to specify which fields they want to receive using the GraphQL syntax, but exposing them through well known REST endpoints.")},{title:"Fast Runtime, Blazing Fast Development",icon:"fa fa-rocket",description:a.createElement(a.Fragment,null,"Deploy your API using one of the best Ruby performing frameworks and take advantage of an unprecedented development speed.")},{title:"API Design-First Philosophy",icon:"fa fa-drafting-compass",description:a.createElement(a.Fragment,null,"Craft and visualize your API design upfont, without writing a single line of code. Forget about implementing API validations, the framework fully takes care of it from your design specs.")},{title:"Feature Rich and Fully Customizable",icon:"fa fa-cogs",description:a.createElement(a.Fragment,null,"Take advantage of best practices, proven methods, standards and features that the frameworks comes with, or pick and choose only the ones you want to enable.")},{title:"Hardnened & Battle Tested",icon:"fa fa-shield-virus",description:a.createElement(a.Fragment,null,"Rest assured you'll get the advertised results as this framework has been deployed in production environments since before 2014.")}];function d(e){let{icon:t,title:n,description:i}=e;return a.createElement("div",{className:(0,l.Z)("col col--4")},a.createElement("div",{className:"text--center"},a.createElement("div",{className:o.featureIconBorder},a.createElement(c.G,{icon:t,className:o.featureIcon}))),a.createElement("div",{className:"text--center padding-horiz--md"},a.createElement("h3",null,n),a.createElement("p",null,i)))}function u(){return a.createElement("section",{className:o.features},a.createElement("div",{className:"row"},m.map(((e,t)=>a.createElement(d,(0,s.Z)({key:t},e))))))}var p=n(814);const f={features:"features_OQuF",title:"title_WFVS"},h='# For example, retrieve the list of users that:\n# - have their Date Of Birth(dob) later than Jan 1st, 2000\n# - paginated in groups of 50 by email order(from start)\n# - sort results by ascending email, then descending dob\n# - return only their id, email, dob and friend collection\n# - with each friend only returning their name and phone \n$ curl \'http://localhost:9292/api/users\' -G \\\n--data - urlencode "filters=dob>2000-01-01" \\\n--data - urlencode "pagination=by=email,items=50" \\\n--data - urlencode "order=email,-dob" \\\n--data - urlencode "fields=id,email,dob,friends{name,phone}" \\\n[\n  {\n    "id": 33,\n    "email": "koolcat@example.com",\n    "dob": "2005-05-05",\n    "fiends": [\n      { "name": "Mr. Mouse", phone: "555-1234" },\n      { "name": "Duck", phone: "555-2222" },\n    ]\n  },\n  {\n    "id": 1,\n    "email": "loosemoose@example.co,",\n    "dob": "2009-01-15",\n    "fiends": [\n      { "name": "Chicken", phone: "555-9999" }\n    ]\n  },\n...\n';function g(){return a.createElement(a.Fragment,null,a.createElement("section",{className:f.features},a.createElement("div",{className:"row",style:{width:"85%",alignItems:"top"}},a.createElement("div",{className:(0,l.Z)("col col--6")},a.createElement("div",{style:{fontSize:"1.1rem",fontFamily:"Ubuntu",marginBottom:"7px",textAlign:"center"}},"Build APIs with clean and powerful querying capabilities"),a.createElement(p.Z,{language:"ruby"},h),a.createElement("div",{className:"summary",style:{fontStyle:"italic",fontSize:"14px",marginTop:"15px",marginBottom:"0px",textAlign:"center"}},"The implementation of the example above requires literally no controller code, or manual crafting of DB queries to be written, when several of the add-ons have been enabled.")),a.createElement("div",{className:(0,l.Z)("col col--6"),style:{paddingLeft:"40px",marginTop:"0px"}},a.createElement("h2",{className:f.title},a.createElement(c.G,{icon:"fa fa-battery-half",style:{paddingRight:"10px"}}),"With batteries included"),a.createElement("ul",{className:"featureList"},a.createElement("li",null,"Automatic enforcement of your API design"),a.createElement("li",null,"Automatic generation of Open API 3.x docs"),a.createElement("li",null,"Built-in GraphQL-style field selection"),a.createElement("li",null,"Integrated pagination and ordering"),a.createElement("li",null,"Seamless and consistent filtering of results"),a.createElement("li",null,"Smart, autogenerated and predictable DB queries"),a.createElement("li",null,"Fast runtime results with Ruby's readibility"),a.createElement("li",null,"Built atop of Rack, and based on standards"),a.createElement("li",null,"Fully configurable, include only features you need"),a.createElement("li",null,"Embeddable with Rails, to reuse your existing code"),a.createElement("li",null,"Fast and flexible routing, API versioning, etc..."),a.createElement("li",null,"API design separate from implementation details"),a.createElement("li",null,"and the list goes on..."))))))}const E={sectionRow:"sectionRow_X7UI",title:"title_rKRc"},y="$ gem install praxis\n$ praxis example myapi && cd myapi\n$ rackup -p 9292\n",b="$ curl http://localhost:9292/something/here\n";function w(){return a.createElement(a.Fragment,null,a.createElement("section",{className:E.sectionRow},a.createElement("div",{className:"row",style:{width:"85%",alignItems:"center"}},a.createElement("div",{className:(0,l.Z)("col col--6")},a.createElement(p.Z,{language:"shell"},y),a.createElement("div",{className:"summary"},"And access the API from another terminal or using your favorite tool:"),a.createElement(p.Z,{language:"shell"},b)),a.createElement("div",{className:(0,l.Z)("col col--6"),style:{paddingLeft:"40px"}},a.createElement("h2",{className:E.title},"How can I get all this?"),a.createElement("p",null,"Glad you asked! Get the Praxis gem, maybe start by generating and playing with a simple pre-canned example app, and read the official documentation.")))))}const v={sectionRow:"sectionRow_lPb0",sectionTitle:"sectionTitle_3RRZ",title:"title_bFDR",how:"how_I3oP"};var x=n(3636);const N=[{title:"Can I use it in my existing Rails App?",text:"You Bet! For already existing ruby apps like Rails, you can embed it seamlessly as a Praxis middleware, and take advantage of sharing any existing models and business logic that you have written. It is the perfect way to quickly build an API for your already existing app."},{title:"Is it GraphQL compatible?",text:"Not exactly, a Praxis app will not act as a full GraphQL server as it is still a RESTful API. However, any listing action can natively support the normal GraphQL syntax for defining which fields and nested subresource fields to return within a single API call. In other words, it supports one of the most desired and used features of GraphQL itself, while still enjoying the many advantages and simplicity of a RESTful design."}];function I(e){let{title:t,text:n}=e;return a.createElement("div",{className:(0,l.Z)("col col--6")},a.createElement("div",{className:v.how},a.createElement("h3",{className:v.title},a.createElement(c.G,{icon:"fa fa-question-circle",style:{color:"#606470",paddingRight:"10px"}}),t),a.createElement("p",null,n)))}function R(){return a.createElement(a.Fragment,null,a.createElement("div",{className:(0,l.Z)("col col--12")},a.createElement("h2",{className:v.sectionTitle},"Frequently Asked Questions")),a.createElement("section",{className:v.sectionRow},a.createElement("div",{className:"row",style:{width:"85%",alignItems:"center"}},N.map((e=>{let{title:t,text:n}=e;return a.createElement(I,{title:t,text:n})})))))}n(9606);var k=n(9417);const A={heroBanner:"heroBanner_qdFl",buttons:"buttons_AeoN",descriptionRow:"descriptionRow_f_7W"};function F(){return a.createElement("section",{className:A.descriptionRow},a.createElement("div",{className:(0,l.Z)("col col--8")},a.createElement("div",{className:"text--center padding-horiz--md"},a.createElement("p",null,"Praxis is a light and extensible Ruby framework that allows you to design and create powerful, consistent and preformant REST APIs at unprecedented development speed"))))}function P(){const{siteConfig:e}=(0,i.Z)();return a.createElement("header",{className:(0,l.Z)("hero hero--primary",A.heroBanner)},a.createElement("div",{className:"container"},a.createElement("h1",{className:"hero__title"},e.title),a.createElement("p",{className:"hero__subtitle"},e.tagline)))}function _(){const{siteConfig:e}=(0,i.Z)();return a.createElement(r.Z,{title:e.title,description:"Praxis is a light and extensible Ruby framework that allows you to design and create powerful, consistent and preformant REST APIs at unprecedented development speed"},a.createElement(P,null),a.createElement("main",null,a.createElement(F,null),a.createElement(u,null),a.createElement(g,null),a.createElement(w,null),a.createElement(R,null)))}x.vI.add(k.mRB)}}]);